strategy:
  matrix:
    windows:
      imageName: 'windows-2019'
    mac:
      imageName: 'macOS-12'
    linux:
      imageName: 'ubuntu-22.04'

pool:
  vmImage: $(imageName)
  variables:
    CC: gcc-11.2
    CXX: g++-11.2

variables:
  # Fixes checksum errors when downloading chrome
  homebrew_cask_opts: '--no-quarantine'
  CI: true

steps:
- template: azure-pipelines-templates/setup-secrets.yml

- template: azure-pipelines-templates/setup-go.yml

- task: CmdLine@2
  inputs:
    script: |
      gcc --version
  condition: eq( variables['Agent.OS'], 'Windows_NT' )
  displayName: 'Display GCC version (Windows)'

- script: |
    curl -Ls https://github.com/github/hub/releases/download/v2.11.1/hub-linux-amd64-2.11.1.tgz | sudo tar -xvz -C /usr/bin --strip-components=2 hub-linux-amd64-2.11.1/bin/hub
    sudo chmod 755 /usr/bin/hub
  condition: eq( variables['Agent.OS'], 'Linux' )
  displayName: 'Install hub (Linux)'

- script: |
    curl -Ls https://github.com/github/hub/releases/download/v2.11.1/hub-darwin-amd64-2.11.1.tgz | sudo gtar -xvz -C /usr/local/bin --strip-components=2 hub-darwin-amd64-2.11.1/bin/hub
    sudo chmod 755 /usr/local/bin/hub
  condition: eq( variables['Agent.OS'], 'Darwin' )
  displayName: 'Install hub (Darwin)'

# make generate-packaging-patch will update the timestamp (in the first two lines of the patch file), so we should ignore that line for the diff
- script: |
    make generate-packaging-patch
    diff -w -u <(git cat-file --filters HEAD:debian/patches/standard_build_layout.patch | awk '{if (NR>3) {print}}') <(cat debian/patches/standard_build_layout.patch | awk '{if (NR>3) {print}}')
  condition: eq( variables['Agent.OS'], 'Linux' )
  displayName: 'Ensure packaging patch is up-to-date (run make generate-packaging-patch)'

- script: |
    make deps
  displayName: 'make deps'

- script: |
    make lint
  displayName: 'make lint'

# make test will build the CLI as part of its work
# (for integration tests), so no need to run build
# make targets separately
- script: |
    make test
  timeoutInMinutes: 90
  displayName: 'make test'

- script: |
    make lint-licenses
  displayName: 'make lint-licenses'

- script: |
    git checkout go.*
  displayName: 'Reset go.* just in case'

