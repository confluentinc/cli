strategy:
  matrix:
    mac:
      imageName: 'macOS-10.15'

pool:
  vmImage: $(imageName)

variables:
  # Fixes checksum errors when downloading chrome
  homebrew_cask_opts: '--no-quarantine'
  CI: true

steps:
- script: |
    brew install gnu-tar
  condition: eq( variables['Agent.OS'], 'Darwin' )
  displayName: 'Install gnu-tar (Darwin)'

- script: |
    echo $HOMEBREW_CASK_OPTS
    brew update
    brew cask install google-chrome
  condition: eq( variables['Agent.OS'], 'Darwin' )
  displayName: 'Install chrome (Darwin)'

- script: |
    wget "https://s3-us-west-2.amazonaws.com/confluent.cloud/cli/go-binaries/1.14.2/go1.14.2.darwin-amd64.tar.gz" --output-document "$(Agent.BuildDirectory)/go1.14.2.tar.gz"
    gtar -C '$(Agent.BuildDirectory)' -xzf "$(Agent.BuildDirectory)/go1.14.2.tar.gz"
  condition: eq( variables['Agent.OS'], 'Darwin' )
  displayName: 'Install Go 1.14.2 (Darwin)'

# Linux
- bash: |
    echo "##vso[task.setvariable variable=GOROOT]$(Agent.BuildDirectory)/go"
    echo "##vso[task.setvariable variable=GOPATH]$(Agent.BuildDirectory)/gopath"
    echo "##vso[task.setvariable variable=GOBIN]$(Agent.BuildDirectory)/go/bin"
    echo "##vso[task.setvariable variable=modulePath]$(Agent.BuildDirectory)/go/src/github.com/$(build.repository.name)"
  condition: ne( variables['Agent.OS'], 'Windows_NT' )
  displayName: Properly configure our custom Go environment (Mac/Linux)

- task: DownloadSecureFile@1
  name: idrsa
  displayName: 'Securely download id_rsa from Azure vault'
  inputs:
    secureFile: 'id_rsa'

- task: DownloadSecureFile@1
  name: netrc
  displayName: 'Securely download netrc from Azure vault'
  inputs:
    secureFile: 'netrc'

- script: |
    echo '##vso[task.prependpath]$(GOROOT)/bin'
    echo '##vso[task.prependpath]$(GOPATH)/bin'
    mkdir -p ${GOPATH}\bin
    mkdir -p ${GOROOT}\bin
  condition: ne( variables['Agent.OS'], 'Windows_NT' )
  displayName: 'Set up the Go workspace (non-Windows)'

- script: |
    mv $(netrc.secureFilePath) ~/.netrc
    mkdir ~/.ssh
    sudo mv $(idrsa.secureFilePath) ~/.ssh/
    sudo chmod 400 ~/.ssh/id_rsa
  condition: ne( variables['Agent.OS'], 'Windows_NT' )
  displayName: 'Put secrets in their right places (non-Windows)'

- script: |
    curl -Ls https://github.com/github/hub/releases/download/v2.11.1/hub-darwin-amd64-2.11.1.tgz | sudo gtar -xvz -C /usr/local/bin --strip-components=2 hub-darwin-amd64-2.11.1/bin/hub
    sudo chmod 755 /usr/local/bin/hub
  condition: eq( variables['Agent.OS'], 'Darwin' )
  displayName: 'Install hub (Darwin)'

- script: |
    make deps
  displayName: 'make deps'

# make test will build the CLI as part of its work
# (for integration tests), so no need to run build
# make targets separately
- script: |
    make build
  displayName: 'make build'

- script: |
    git checkout go.*
  displayName: 'Reset go.* just in case'

