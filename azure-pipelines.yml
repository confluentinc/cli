pool:
  vmImage: 'ubuntu-18.04'

steps:

- bash: |
    make install-vault
    . mk-include/bin/vault-setup
  displayName: 'Install Vault'

- bash: |
    . vault-sem-get-secret ssh_id_rsa
    . vault-sem-get-secret netrc
    . vault-sem-get-secret semaphore-secrets-global
    . vault-sem-get-secret eng_aws
    . vault-sem-get-secret cpd_gcloud
    . vault-sem-get-secret ssh_config
    . vault-sem-get-secret gitconfig
  displayName: 'Inject secrets'

- bash: |
    make init-ci
    SKIP_SETUP_SCHEMA_REGISTRY_ENV=true SKIP_SETUP_S3_BUCKET_FOR_CONNECT=true GO_TEST_PACKAGE_ARGS=./test/paas/... TESTS_TO_RUN=Test make system-tests-on-cpd
  displayName: 'Running PAAS system test'
- script: |
    wget "https://s3-us-west-2.amazonaws.com/confluent.cloud/cli/go-binaries/1.14.2/go1.14.2.linux-amd64.tar.gz" --output-document "$(Agent.BuildDirectory)/go1.14.2.tar.gz"
    tar -C '$(Agent.BuildDirectory)' -xzf "$(Agent.BuildDirectory)/go1.14.2.tar.gz"

- bash: |
    echo "##vso[task.setvariable variable=GOROOT]$(Agent.BuildDirectory)/go"
    echo "##vso[task.setvariable variable=GOPATH]$(Agent.BuildDirectory)/gopath"
    echo "##vso[task.setvariable variable=GOBIN]$(Agent.BuildDirectory)/go/bin"
    echo "##vso[task.setvariable variable=modulePath]$(Agent.BuildDirectory)/go/src/github.com/$(build.repository.name)"
  displayName: Properly configure our custom Go environment

- script: |
    echo '##vso[task.prependpath]$(GOROOT)/bin'
    echo '##vso[task.prependpath]$(GOPATH)/bin'
    mkdir -p ${GOPATH}\bin
    mkdir -p ${GOROOT}\bin
  displayName: 'Set up the Go workspace'

- script: |
    make deps
  displayName: 'make deps'

# make test will build the CLI as part of its work
# (for integration tests), so no need to run build
# make targets separately
- script: |
    make build
  displayName: 'make build'

- script: |
    git checkout go.*
  displayName: 'Reset go.* just in case'

