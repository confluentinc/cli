Create a Rust client configuration file, of which the client configuration file is printed to stdout and the warnings are printed to stderr. Please see our examples on how to redirect the command output.

Usage:
  confluent kafka client-config create rust [flags]

Examples:
Create a Rust client configuration file.

  $ confluent kafka client-config create rust

Create a Rust client configuration file with arguments.

  $ confluent kafka client-config create rust --environment env-123 --cluster lkc-123456 --api-key my-key --api-secret my-secret

Create a Rust client configuration file, redirecting the configuration to a file and the warnings to a separate file.

  $ confluent kafka client-config create rust 1> my-client-config-file.config 2> my-warnings-file

Create a Rust client configuration file, redirecting the configuration to a file and keeping the warnings in the console.

  $ confluent kafka client-config create rust 1> my-client-config-file.config 2>&1

Flags:
      --context string       CLI context name.
      --environment string   Environment ID.
      --cluster string       Kafka cluster ID.
      --api-key string       API key.
      --api-secret string    API secret.

Global Flags:
  -h, --help            Show help for this command.
      --unsafe-trace    Equivalent to -vvvv, but also log HTTP requests and responses which might contain plaintext secrets.
  -v, --verbose count   Increase verbosity (-v for warn, -vv for info, -vvv for debug, -vvvv for trace).
