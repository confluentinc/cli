Validate that a schema is compatible against a given subject version.

Usage:
  confluent schema-registry compatibility validate [flags]

Examples:
Validate the compatibility of schema "payments" against the latest version of subject "records".

  $ confluent schema-registry compatibility validate --schema payments.avsc --type avro --subject records --version latest

Flags:
      --schema string        The path to the schema file.
      --type string          Specify the schema type as "avro", "json", or "protobuf".
      --subject string       Subject of the schema.
      --version string       Version of the schema. Can be a specific version or "latest".
      --references string    The path to the references file.
      --environment string   Environment ID.
      --context string       CLI context name.
  -o, --output string        Specify the output format as "human", "json", or "yaml". (default "human")

Global Flags:
  -h, --help            Show help for this command.
      --unsafe-trace    Equivalent to -vvvv, but also log HTTP requests and responses which might contain plaintext secrets.
  -v, --verbose count   Increase verbosity (-v for warn, -vv for info, -vvv for debug, -vvvv for trace).
