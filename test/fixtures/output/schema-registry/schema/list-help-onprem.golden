List schemas for a given subject prefix.

Usage:
  confluent schema-registry schema list [flags]

Examples:
List all schemas for subjects with prefix "my-subject".

  $ confluent schema-registry schema list --subject-prefix my-subject --certificate-authority-path <certification-authority-location> --schema-registry-endpoint <schema-registry-endpoint>

List all schemas for all subjects in context ":.mycontext:".

  $ confluent schema-registry schema list --subject-prefix :.mycontext: --certificate-authority-path <certification-authority-location> --schema-registry-endpoint <schema-registry-endpoint>

List all schemas in the default context.

  $ confluent schema-registry schema list --certificate-authority-path <certification-authority-location> --schema-registry-endpoint <schema-registry-endpoint>

Flags:
      --subject-prefix string               List schemas for subjects with a given prefix.
      --all                                 Include soft-deleted schemas.
      --context string                      CLI context name.
      --certificate-authority-path string   File or directory path to Certificate Authority certificates to authenticate the Schema Registry client.
      --client-cert-path string             File or directory path to client certificate to authenticate the Schema Registry client.
      --client-key-path string              File or directory path to client key to authenticate the Schema Registry client.
      --schema-registry-endpoint string     The URL of the Schema Registry cluster.
  -o, --output string                       Specify the output format as "human", "json", or "yaml". (default "human")

Global Flags:
  -h, --help            Show help for this command.
      --unsafe-trace    Equivalent to -vvvv, but also log HTTP requests and responses which might contain plaintext secrets.
  -v, --verbose count   Increase verbosity (-v for warn, -vv for info, -vvv for debug, -vvvv for trace).
