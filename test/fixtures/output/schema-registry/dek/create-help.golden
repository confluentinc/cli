Create a Data Encryption Key (DEK).

Usage:
  confluent schema-registry dek create [flags]

Examples:
Create a DEK with KEK "test", and subject "test-value":

  $ confluent schema-registry dek create --kek-name test --subject test-value --version 1

Flags:
      --kek-name string                 REQUIRED: Name of the Key Encryption Key (KEK).
      --subject string                  REQUIRED: Subject of the Data Encryption Key (DEK).
      --version int32                   REQUIRED: Version of the Data Encryption Key (DEK).
      --algorithm string                Use algorithm "AES128_GCM", "AES256_GCM", or "AES256_SIV" for the Data Encryption Key (DEK).
      --encrypted-key-material string   The encrypted key material for the Data Encryption Key (DEK).
      --context string                  CLI context name.
      --environment string              Environment ID.
  -o, --output string                   Specify the output format as "human", "json", or "yaml". (default "human")

Global Flags:
  -h, --help            Show help for this command.
      --unsafe-trace    Equivalent to -vvvv, but also log HTTP requests and responses which might contain plaintext secrets.
  -v, --verbose count   Increase verbosity (-v for warn, -vv for info, -vvv for debug, -vvvv for trace).
