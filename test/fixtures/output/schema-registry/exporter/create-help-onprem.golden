Create a new schema exporter.

Usage:
  confluent schema-registry exporter create <name> [flags]

Examples:
Create a new schema exporter.

  $ confluent schema-registry exporter create my-exporter --config config.txt --subjects my-subject1,my-subject2 --subject-format my-\${subject} --context-type custom --context-name my-context --ca-location <ca-file-location> --schema-registry-endpoint <schema-registry-endpoint>

Flags:
      --config strings                    A comma-separated list of "key=value" pairs, or path to a configuration file containing a newline-separated list of "key=value" pairs.
      --subjects strings                  A comma-separated list of exporter subjects. (default [*])
      --subject-format string             Exporter subject rename format. The format string can contain ${subject}, which will be replaced with the default subject name. (default "${subject}")
      --context-type string               Exporter context type. One of "auto", "custom", or "none". (default "auto")
      --context-name string               Exporter context name.
      --context string                    CLI context name.
      --ca-location string                File or directory path to CA certificates to authenticate the Schema Registry client.
      --schema-registry-endpoint string   The URL of the Schema Registry cluster.
  -o, --output string                     Specify the output format as "human", "json", or "yaml". (default "human")

Global Flags:
  -h, --help            Show help for this command.
      --unsafe-trace    Equivalent to -vvvv, but also log HTTP requests and responses which might contain plaintext secrets.
  -v, --verbose count   Increase verbosity (-v for warn, -vv for info, -vvv for debug, -vvvv for trace).
