Create a connector.

Usage:
  confluent connect cluster create [flags]

Examples:
Create a configuration file with connector configs and offsets.

  {
    "name": "MyGcsLogsBucketConnector",
    "config": {
      "connector.class": "GcsSink",
      "data.format": "BYTES",
      "flush.size": "1000",
      "gcs.bucket.name": "APILogsBucket",
      "gcs.credentials.config": "****************",
      "kafka.api.key": "****************",
      "kafka.api.secret": "****************",
      "name": "MyGcsLogsBucketConnector",
      "tasks.max": "2",
      "time.interval": "DAILY",
      "topics": "APILogsTopic"
    },
    "offsets": [
  	{
  	  "partition": {
  		"kafka_partition": 0,
  		"kafka_topic": "topic_A"
  	  },
  	  "offset": {
  		"kafka_offset": 1000
  	  }
  	}
    ]
  }

Create a connector in the current or specified Kafka cluster context.

  $ confluent connect cluster create --config-file config.json

  $ confluent connect cluster create --config-file config.json --cluster lkc-123456

Flags:
      --config-file string   REQUIRED: JSON connector configuration file.
      --cluster string       Kafka cluster ID.
      --context string       CLI context name.
      --environment string   Environment ID.
  -o, --output string        Specify the output format as "human", "json", or "yaml". (default "human")

Global Flags:
  -h, --help            Show help for this command.
      --unsafe-trace    Equivalent to -vvvv, but also log HTTP requests and responses which might contain plaintext secrets.
  -v, --verbose count   Increase verbosity (-v for warn, -vv for info, -vvv for debug, -vvvv for trace).
