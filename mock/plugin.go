// Code generated by mocker. DO NOT EDIT.
// github.com/travisjeffery/mocker
// Source: plugin.go

package mock

import (
	sync "sync"
)

// GRPCPlugin is a mock of GRPCPlugin interface
type GRPCPlugin struct {
	lockLookupPath sync.Mutex
	LookupPathFunc func() (string, error)

	lockLoad sync.Mutex
	LoadFunc func(arg0 interface{}) error

	calls struct {
		LookupPath []struct {
		}
		Load []struct {
			Arg0 interface{}
		}
	}
}

// LookupPath mocks base method by wrapping the associated func.
func (m *GRPCPlugin) LookupPath() (string, error) {
	m.lockLookupPath.Lock()
	defer m.lockLookupPath.Unlock()

	if m.LookupPathFunc == nil {
		panic("mocker: GRPCPlugin.LookupPathFunc is nil but GRPCPlugin.LookupPath was called.")
	}

	call := struct {
	}{}

	m.calls.LookupPath = append(m.calls.LookupPath, call)

	return m.LookupPathFunc()
}

// LookupPathCalled returns true if LookupPath was called at least once.
func (m *GRPCPlugin) LookupPathCalled() bool {
	m.lockLookupPath.Lock()
	defer m.lockLookupPath.Unlock()

	return len(m.calls.LookupPath) > 0
}

// LookupPathCalls returns the calls made to LookupPath.
func (m *GRPCPlugin) LookupPathCalls() []struct {
} {
	m.lockLookupPath.Lock()
	defer m.lockLookupPath.Unlock()

	return m.calls.LookupPath
}

// Load mocks base method by wrapping the associated func.
func (m *GRPCPlugin) Load(arg0 interface{}) error {
	m.lockLoad.Lock()
	defer m.lockLoad.Unlock()

	if m.LoadFunc == nil {
		panic("mocker: GRPCPlugin.LoadFunc is nil but GRPCPlugin.Load was called.")
	}

	call := struct {
		Arg0 interface{}
	}{
		Arg0: arg0,
	}

	m.calls.Load = append(m.calls.Load, call)

	return m.LoadFunc(arg0)
}

// LoadCalled returns true if Load was called at least once.
func (m *GRPCPlugin) LoadCalled() bool {
	m.lockLoad.Lock()
	defer m.lockLoad.Unlock()

	return len(m.calls.Load) > 0
}

// LoadCalls returns the calls made to Load.
func (m *GRPCPlugin) LoadCalls() []struct {
	Arg0 interface{}
} {
	m.lockLoad.Lock()
	defer m.lockLoad.Unlock()

	return m.calls.Load
}

// Reset resets the calls made to the mocked methods.
func (m *GRPCPlugin) Reset() {
	m.lockLookupPath.Lock()
	m.calls.LookupPath = nil
	m.lockLookupPath.Unlock()
	m.lockLoad.Lock()
	m.calls.Load = nil
	m.lockLoad.Unlock()
}
