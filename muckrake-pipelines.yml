jobs:
- job: system_test
  displayName: cli muckrake system tests
  timeoutInMinutes: 90

  pool:
    vmImage: 'ubuntu-18.04'
  
  variables:
    IMAGE_NAME: DUMMY_IMAGE_NAME # dummy image name to stop mk-include/docker.mk from crashing as it requires image name (not needed for CLI system tests)
    CI: "true"
    BIN_PATH: "$(Agent.BuildDirectory)"
  
  steps:
    
  - task: HelmInstaller@1 # Azure Pipelines preinstalls helm, replace it with version 2.9.1 specified in cc-helm.mk
    displayName: Helm installer
    inputs:
      helmVersionToInstall: 2.9.1
 
  - template: azure-pipelines-templates/setup-secrets.yml

  - template: azure-pipelines-templates/setup-go.yml
      
  - script: |
      wget "https://s3-us-west-2.amazonaws.com/confluent.cloud/cli/go-binaries/1.14.2/go1.14.2.linux-amd64.tar.gz" --output-document "$(Agent.BuildDirectory)/go1.14.2.tar.gz"
      tar -C '$(Agent.BuildDirectory)' -xzf "$(Agent.BuildDirectory)/go1.14.2.tar.gz"
    displayName: Download go 1.14.2
  
  - bash: |
      echo "##vso[task.setvariable variable=GOROOT]$(Agent.BuildDirectory)/go"
      echo "##vso[task.setvariable variable=GOPATH]$(Agent.BuildDirectory)/gopath"
      echo "##vso[task.setvariable variable=GOBIN]$(Agent.BuildDirectory)/go/bin"
      echo "##vso[task.setvariable variable=modulePath]$(Agent.BuildDirectory)/go/src/github.com/$(build.repository.name)"
    displayName: Properly configure our custom Go environment
  
  - script: |
      echo '##vso[task.prependpath]$(GOROOT)/bin'
      echo '##vso[task.prependpath]$(GOPATH)/bin'
      mkdir -p ${GOPATH}\bin
      mkdir -p ${GOROOT}\bin
    displayName: Set up the Go workspace
  
  - task: DownloadSecureFile@1
    name: vaultsecrets
    displayName: Securely download secrets for vault login (VAULT_ADDR, VAULT_ROLE_ID, VAULT_SECRET_ID)
    inputs:
      secureFile: 'vault_secrets'
  
  - script: |
      make deps
    displayName: make deps
  
  - script: |
      make build-confluent
    displayName: make build-confluent
  
  - task: GoTool@0
    inputs:
      version: '1.12.7'
  
  - bash: |
      git clone git@github.com:confluentinc/cc-mk-include.git mk-include
      echo "include ./mk-include/cc-begin.mk" >> Makefile
      echo "include ./mk-include/cc-end.mk" >> Makefile
      echo "include ./mk-include/cc-docker.mk" >> Makefile
      echo "include ./mk-include/cc-vault.mk" >> Makefile
      echo "include ./mk-include/cc-helm.mk" >> Makefile
      echo "include ./mk-include/cc-cpd.mk" >> Makefile
      echo "include ./cli-cpd.mk" >> Makefile
    displayName: clone mk-include and include in Makefile
  
  - bash: |
      make install-vault
    displayName: install vault
  

  - bash: |
      export PATH="$(BIN_PATH):$PATH" #export path where vault is loaded to
      . $(vaultsecrets.secureFilePath) # export secrets for vault login (VAULT_ADDR, VAULT_ROLE_ID, VAULT_SECRET_ID)
      . mk-include/bin/vault-setup
      . vault-sem-get-secret ssh_id_rsa
      . vault-sem-get-secret netrc
      . vault-sem-get-secret semaphore-secrets-global
      . vault-sem-get-secret eng_aws
      . vault-sem-get-secret aws_credentials
      . vault-sem-get-secret cpd_gcloud
      . vault-sem-get-secret ssh_config
      . vault-sem-get-secret gitconfig
      make docker-login
      make helm-init-ci
      make helm-update-repo
    displayName: try to inject secrets and setup docker and helm
  
  - bash: |
      git clone https://github.com/confluentinc/muckrake.git
      cd muckrake
    displayName: clone muckrake

  - bash: |
      ./ducker/ducker checkout prebuilt && ./ducker/ducker checkout git
    displayName: checkout prebuilt and git materials
  
