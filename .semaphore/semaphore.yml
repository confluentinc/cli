version: v1.0
name: Confluent CLI

agent:
  machine:
    type: s1-prod-ubuntu20-04-amd64-1

auto_cancel:
  running:
    when: "branch != 'main'"

execution_time_limit:
  hours: 1

blocks:
  - name: linux/amd64
    dependencies: []
    task:
      jobs:
        - name: linux/amd64
          commands:
            - checkout
            - sem-version go $(cat .go-version)
            - go install github.com/charmbracelet/vhs@latest
            - export PATH=$(go env GOPATH)/bin:$PATH
            - vhs -v
            - make generate-packaging-patch
            - diff -w -u <(git cat-file --filters HEAD:debian/patches/standard_build_layout.patch | awk "{if (NR>3) {print}}") <(cat debian/patches/standard_build_layout.patch | awk "{if (NR>3) {print}}")
            - make lint
            - make test
            - make test-installer
      epilogue:
        always:
          commands:
            - test-results publish . -N "linux/amd64"

  - name: darwin/arm64
    dependencies: []
    task:
      agent:
        machine:
          type: s1-prod-macos-13-5-arm64
      jobs:
        - name: darwin/arm64
          commands:
            - checkout
            - sem-version go $(cat .go-version)
            - export PATH="$PWD:$PATH"
            - wget https://github.com/eugeneware/ffmpeg-static/releases/download/b6.0/ffmpeg-darwin-arm64
            - mv ffmpeg-darwin-arm64 ffmpeg
            - chmod +x ffmpeg
            - ls
            - ffmpeg -h
            - wget https://github.com/tsl0922/ttyd/releases/download/1.7.4/ttyd.aarch64
            - mv ttyd.aarch64 ttyd
            - chmod +x ttyd
            - ls
            - ttyd -v
            - wget https://github.com/charmbracelet/vhs/releases/download/v0.7.1/vhs_0.7.1_Darwin_arm64.tar.gz
            - tar -xzvf vhs_0.7.1_Darwin_arm64.tar.gz
            - chmod +x vhs
            - vhs --version
            - export PATH=$(go env GOPATH)/bin:$PATH
            - vhs -v
            - make test
      epilogue:
        always:
          commands:
            - test-results publish . -N "darwin/arm64"

  - name: windows/amd64
    dependencies: []
    task:
      agent:
        machine:
          type: s1-prod-windows
      jobs:
        - name: windows/amd64
          commands:
            - checkout
            # https://confluentinc.atlassian.net/browse/DP-9532
            - choco install -y golang --version $(Get-Content .go-version)
            - $env:GOCOVERDIR = 'test/coverage'
            - New-Item $env:GOCOVERDIR -ItemType Directory
            - go install github.com/charmbracelet/vhs@latest
            - vhs -v
            - go install gotest.tools/gotestsum@v1.8.2
            - gotestsum --junitfile unit-test-report.xml -- -v $(go list ./... | Select-String test -NotMatch) -ldflags "-buildmode=exe"
            - gotestsum --junitfile integration-test-report.xml -- -v $(go list ./... | Select-String test)
            - go tool covdata textfmt -i $env:GOCOVERDIR -o test/coverage.out
      epilogue:
        always:
          commands:
            - test-results publish . -N "windows/amd64"

after_pipeline:
  task:
    jobs:
      - name: Publish Results
        commands:
          - test-results gen-pipeline-report
