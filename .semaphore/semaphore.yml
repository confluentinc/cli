version: v1.0
name: Confluent CLI

agent:
  machine:
    type: s1-prod-ubuntu20-04-amd64-1

auto_cancel:
  running:
    when: "true"

global_job_config:
  secrets:
    - name: vault_sem2_approle

execution_time_limit:
  hours: 1

blocks:
  - name: Download Dependencies
    dependencies: []
    task:
      jobs:
        - name: go mod download
          commands:
            # Install Vault
            - wget -O vault.zip https://vault-zipfile-public-cache.s3-us-west-2.amazonaws.com/vault_1.4.0_linux_amd64.zip
            - unzip vault.zip
            - chmod +x vault
            
            # Log in to Vault
            - VAULT_TOKEN=$(./vault write -field=token auth/app/devel/login role_id=${VAULT_ROLE_ID} secret_id=${VAULT_SECRET_ID})
            - ./vault login -no-print token="${VAULT_TOKEN}"
            
            # Get GitHub SSH key from Vault
            - ./vault kv get -field=script "v1/ci/kv/semaphore2/ssh_id_rsa" > script.sh
            - source script.sh
            
            # Try to restore cached dependencies
            - checkout
            - cache restore $(checksum go.sum)
            
            # Download Go dependencies
            - sem-version go 1.17.6
            - export "PATH=$(go env GOPATH)/bin:${PATH}"
            - export "GOPRIVATE=github.com/confluentinc"
            - git config --global url."git@github.com:".insteadOf "https://github.com/"
            - go mod download
            - make deps
            
            # The integration tests use github.com/confluentinc/bincover, which uses a separate build tag "testrunmain".
            # As a result, `go mod download` will not download dependencies specific to the integration tests.
            - go test ./cmd/confluent -tags=testrunmain -c
            
            - cache store $(checksum go.sum) $(go env GOPATH)

  - name: Linux
    dependencies: ["Download Dependencies"]
    task:
      prologue:
        commands:
          - sem-version go 1.17.6
          - which go
          - checkout
          - export "GOPATH=$(go env GOPATH)"
          - export "PATH=$(go env GOPATH)/bin:${PATH}"
          - cache restore $(checksum go.sum)
      jobs:
        - name: Lint
          commands:
            - make lint
        - name: Unit Tests
          commands:
            - make unit-test
        - name: Integration Tests
          commands:
            - make int-test
        - name: Smoke Tests
          commands:
            - make test-installer

  - name: MacOS
    dependencies: ["Download Dependencies"]
    task:
      agent:
        machine:
          # TODO: Use s1-prod-macos
          type: a1-standard-4
          os_image: macos-xcode13
      prologue:
        commands:
          - wget https://golang.org/dl/go1.17.6.darwin-amd64.tar.gz
          - echo $PATH
          - sudo tar -xzf go1.17.6.darwin-amd64.tar.gz -C /usr/local/
          - checkout
          - export "PATH=$(go env GOPATH)/bin:${PATH}"
          - cache restore $(checksum go.sum)
      jobs:
        - name: Unit Tests
          commands:
            - make unit-test
        - name: Integration Tests
          commands:
            - make int-test
        - name: Smoke Tests
          commands:
            - make test-installer

#  - name: Windows
#    dependencies: ["Download Dependencies"]
#    task:
#      agent:
#        machine:
#          type: s1-prod-windows
#      prologue:
#        commands:
#          - Invoke-WebRequest https://golang.org/dl/go1.17.6.windows-amd64.zip -OutFile go1.17.6.windows-amd64.zip 
#          - Expand-Archive go1.17.6.windows-amd64.zip
#          - checkout
#          - export "PATH=$(go env GOPATH)/bin:${PATH}"
#          - cache restore $(checksum go.sum)
#      jobs:
#        - name: Unit Tests
#          commands:
#            - make unit-test
#        - name: Integration Tests
#          commands:
#            - make int-test
#        - name: Smoke Tests
#          commands:
#            - make test-installer

# TODO: Publish test results https://docs.semaphoreci.com/essentials/test-summary/#setting-up-test-reports
