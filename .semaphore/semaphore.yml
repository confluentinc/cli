version: v1.0
name: Confluent CLI

agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu2004

execution_time_limit:
  hours: 2

# TODO: Give access to private repos

global_job_config:
  secrets:
    - name: vault_sem2_approle

blocks:
  - name: Linux
    task:
      jobs:
        - name: Lint & Test
          commands:
            - checkout
            
            - export HOST_OS=$(shell uname | tr A-Z a-z)
            - export VAULT_URL=https://vault-zipfile-public-cache.s3-us-west-2.amazonaws.com/vault_v1.4.0_$(HOST_OS)_amd64.zip
            - wget --timeout=20 --tries=15 --retry-connrefused -q -O /tmp/vault.zip $(VAULT_URL)
            - echo "Unzipping received /tmp/vault.zip" && cd /tmp && unzip vault.zip
            - export SEMAPHORE_CACHE_DIR=/home/semaphore
            - mv -f /tmp/vault $(SEMAPHORE_CACHE_DIR)/bin/vault
            - chmod +x $(SEMAPHORE_CACHE_DIR)/bin/vault
            - which vault

            - echo "$VAULT_ADDR"
            - echo "$VAULT_ROLE_ID"
            - echo "$VAULT_SECRET_ID"
            - cat ~/.vault-token
#            - token="$(vault write -field=token auth/app/prod/login role_id=${VAULT_ROLE_ID} secret_id=${VAULT_SECRET_ID})" || exit
#            - vault login -no-print token="${token}"
#            - unset token
            
            - git config --global url."git@github.com:".insteadOf "https://github.com/"
            
#            - make show-vault
#            - make install-vault
#            - . mk-include/bin/vault-setup
#            - . vault-sem-get-secret semaphore-secrets-global
#            - . vault-sem-get-secret artifactory-docker-helm
#            - . vault-sem-get-secret testbreak-reporting
#            - . vault-sem-get-secret ssh_id_rsa
#            - . vault-sem-get-secret netrc
#            - . vault-sem-get-secret ssh_config
#            - . vault-sem-get-secret gitconfig
            
            - sem-version go 1.17.6
            - make deps
            - make lint
            - make test

after_pipeline:
  task:
    jobs:
      - name: Publish Results
        commands:
          - test-results gen-pipeline-report
