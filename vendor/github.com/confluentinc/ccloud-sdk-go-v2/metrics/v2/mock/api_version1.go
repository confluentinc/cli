// Code generated by mocker. DO NOT EDIT.
// github.com/travisjeffery/mocker
// Source: api_version1.go

package mock

import (
	context "context"
	net_http "net/http"
	sync "sync"

	github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2 "github.com/confluentinc/ccloud-sdk-go-v2/metrics/v2"
)

// Version1Api is a mock of Version1Api interface
type Version1Api struct {
	lockV1MetricsDatasetAttributesPost sync.Mutex
	V1MetricsDatasetAttributesPostFunc func(ctx context.Context, dataset string) github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV1MetricsDatasetAttributesPostRequest

	lockV1MetricsDatasetAttributesPostExecute sync.Mutex
	V1MetricsDatasetAttributesPostExecuteFunc func(r github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV1MetricsDatasetAttributesPostRequest) (*github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.AttributesResponse, *net_http.Response, error)

	lockV1MetricsDatasetDescriptorsGet sync.Mutex
	V1MetricsDatasetDescriptorsGetFunc func(ctx context.Context, dataset string) github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV1MetricsDatasetDescriptorsGetRequest

	lockV1MetricsDatasetDescriptorsGetExecute sync.Mutex
	V1MetricsDatasetDescriptorsGetExecuteFunc func(r github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV1MetricsDatasetDescriptorsGetRequest) (*github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ListMetricDescriptorsResponse, *net_http.Response, error)

	lockV1MetricsDatasetQueryPost sync.Mutex
	V1MetricsDatasetQueryPostFunc func(ctx context.Context, dataset string) github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV1MetricsDatasetQueryPostRequest

	lockV1MetricsDatasetQueryPostExecute sync.Mutex
	V1MetricsDatasetQueryPostExecuteFunc func(r github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV1MetricsDatasetQueryPostRequest) (*github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.QueryResponse, *net_http.Response, error)

	calls struct {
		V1MetricsDatasetAttributesPost []struct {
			Ctx     context.Context
			Dataset string
		}
		V1MetricsDatasetAttributesPostExecute []struct {
			R github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV1MetricsDatasetAttributesPostRequest
		}
		V1MetricsDatasetDescriptorsGet []struct {
			Ctx     context.Context
			Dataset string
		}
		V1MetricsDatasetDescriptorsGetExecute []struct {
			R github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV1MetricsDatasetDescriptorsGetRequest
		}
		V1MetricsDatasetQueryPost []struct {
			Ctx     context.Context
			Dataset string
		}
		V1MetricsDatasetQueryPostExecute []struct {
			R github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV1MetricsDatasetQueryPostRequest
		}
	}
}

// V1MetricsDatasetAttributesPost mocks base method by wrapping the associated func.
func (m *Version1Api) V1MetricsDatasetAttributesPost(ctx context.Context, dataset string) github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV1MetricsDatasetAttributesPostRequest {
	m.lockV1MetricsDatasetAttributesPost.Lock()
	defer m.lockV1MetricsDatasetAttributesPost.Unlock()

	if m.V1MetricsDatasetAttributesPostFunc == nil {
		panic("mocker: Version1Api.V1MetricsDatasetAttributesPostFunc is nil but Version1Api.V1MetricsDatasetAttributesPost was called.")
	}

	call := struct {
		Ctx     context.Context
		Dataset string
	}{
		Ctx:     ctx,
		Dataset: dataset,
	}

	m.calls.V1MetricsDatasetAttributesPost = append(m.calls.V1MetricsDatasetAttributesPost, call)

	return m.V1MetricsDatasetAttributesPostFunc(ctx, dataset)
}

// V1MetricsDatasetAttributesPostCalled returns true if V1MetricsDatasetAttributesPost was called at least once.
func (m *Version1Api) V1MetricsDatasetAttributesPostCalled() bool {
	m.lockV1MetricsDatasetAttributesPost.Lock()
	defer m.lockV1MetricsDatasetAttributesPost.Unlock()

	return len(m.calls.V1MetricsDatasetAttributesPost) > 0
}

// V1MetricsDatasetAttributesPostCalls returns the calls made to V1MetricsDatasetAttributesPost.
func (m *Version1Api) V1MetricsDatasetAttributesPostCalls() []struct {
	Ctx     context.Context
	Dataset string
} {
	m.lockV1MetricsDatasetAttributesPost.Lock()
	defer m.lockV1MetricsDatasetAttributesPost.Unlock()

	return m.calls.V1MetricsDatasetAttributesPost
}

// V1MetricsDatasetAttributesPostExecute mocks base method by wrapping the associated func.
func (m *Version1Api) V1MetricsDatasetAttributesPostExecute(r github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV1MetricsDatasetAttributesPostRequest) (*github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.AttributesResponse, *net_http.Response, error) {
	m.lockV1MetricsDatasetAttributesPostExecute.Lock()
	defer m.lockV1MetricsDatasetAttributesPostExecute.Unlock()

	if m.V1MetricsDatasetAttributesPostExecuteFunc == nil {
		panic("mocker: Version1Api.V1MetricsDatasetAttributesPostExecuteFunc is nil but Version1Api.V1MetricsDatasetAttributesPostExecute was called.")
	}

	call := struct {
		R github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV1MetricsDatasetAttributesPostRequest
	}{
		R: r,
	}

	m.calls.V1MetricsDatasetAttributesPostExecute = append(m.calls.V1MetricsDatasetAttributesPostExecute, call)

	return m.V1MetricsDatasetAttributesPostExecuteFunc(r)
}

// V1MetricsDatasetAttributesPostExecuteCalled returns true if V1MetricsDatasetAttributesPostExecute was called at least once.
func (m *Version1Api) V1MetricsDatasetAttributesPostExecuteCalled() bool {
	m.lockV1MetricsDatasetAttributesPostExecute.Lock()
	defer m.lockV1MetricsDatasetAttributesPostExecute.Unlock()

	return len(m.calls.V1MetricsDatasetAttributesPostExecute) > 0
}

// V1MetricsDatasetAttributesPostExecuteCalls returns the calls made to V1MetricsDatasetAttributesPostExecute.
func (m *Version1Api) V1MetricsDatasetAttributesPostExecuteCalls() []struct {
	R github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV1MetricsDatasetAttributesPostRequest
} {
	m.lockV1MetricsDatasetAttributesPostExecute.Lock()
	defer m.lockV1MetricsDatasetAttributesPostExecute.Unlock()

	return m.calls.V1MetricsDatasetAttributesPostExecute
}

// V1MetricsDatasetDescriptorsGet mocks base method by wrapping the associated func.
func (m *Version1Api) V1MetricsDatasetDescriptorsGet(ctx context.Context, dataset string) github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV1MetricsDatasetDescriptorsGetRequest {
	m.lockV1MetricsDatasetDescriptorsGet.Lock()
	defer m.lockV1MetricsDatasetDescriptorsGet.Unlock()

	if m.V1MetricsDatasetDescriptorsGetFunc == nil {
		panic("mocker: Version1Api.V1MetricsDatasetDescriptorsGetFunc is nil but Version1Api.V1MetricsDatasetDescriptorsGet was called.")
	}

	call := struct {
		Ctx     context.Context
		Dataset string
	}{
		Ctx:     ctx,
		Dataset: dataset,
	}

	m.calls.V1MetricsDatasetDescriptorsGet = append(m.calls.V1MetricsDatasetDescriptorsGet, call)

	return m.V1MetricsDatasetDescriptorsGetFunc(ctx, dataset)
}

// V1MetricsDatasetDescriptorsGetCalled returns true if V1MetricsDatasetDescriptorsGet was called at least once.
func (m *Version1Api) V1MetricsDatasetDescriptorsGetCalled() bool {
	m.lockV1MetricsDatasetDescriptorsGet.Lock()
	defer m.lockV1MetricsDatasetDescriptorsGet.Unlock()

	return len(m.calls.V1MetricsDatasetDescriptorsGet) > 0
}

// V1MetricsDatasetDescriptorsGetCalls returns the calls made to V1MetricsDatasetDescriptorsGet.
func (m *Version1Api) V1MetricsDatasetDescriptorsGetCalls() []struct {
	Ctx     context.Context
	Dataset string
} {
	m.lockV1MetricsDatasetDescriptorsGet.Lock()
	defer m.lockV1MetricsDatasetDescriptorsGet.Unlock()

	return m.calls.V1MetricsDatasetDescriptorsGet
}

// V1MetricsDatasetDescriptorsGetExecute mocks base method by wrapping the associated func.
func (m *Version1Api) V1MetricsDatasetDescriptorsGetExecute(r github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV1MetricsDatasetDescriptorsGetRequest) (*github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ListMetricDescriptorsResponse, *net_http.Response, error) {
	m.lockV1MetricsDatasetDescriptorsGetExecute.Lock()
	defer m.lockV1MetricsDatasetDescriptorsGetExecute.Unlock()

	if m.V1MetricsDatasetDescriptorsGetExecuteFunc == nil {
		panic("mocker: Version1Api.V1MetricsDatasetDescriptorsGetExecuteFunc is nil but Version1Api.V1MetricsDatasetDescriptorsGetExecute was called.")
	}

	call := struct {
		R github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV1MetricsDatasetDescriptorsGetRequest
	}{
		R: r,
	}

	m.calls.V1MetricsDatasetDescriptorsGetExecute = append(m.calls.V1MetricsDatasetDescriptorsGetExecute, call)

	return m.V1MetricsDatasetDescriptorsGetExecuteFunc(r)
}

// V1MetricsDatasetDescriptorsGetExecuteCalled returns true if V1MetricsDatasetDescriptorsGetExecute was called at least once.
func (m *Version1Api) V1MetricsDatasetDescriptorsGetExecuteCalled() bool {
	m.lockV1MetricsDatasetDescriptorsGetExecute.Lock()
	defer m.lockV1MetricsDatasetDescriptorsGetExecute.Unlock()

	return len(m.calls.V1MetricsDatasetDescriptorsGetExecute) > 0
}

// V1MetricsDatasetDescriptorsGetExecuteCalls returns the calls made to V1MetricsDatasetDescriptorsGetExecute.
func (m *Version1Api) V1MetricsDatasetDescriptorsGetExecuteCalls() []struct {
	R github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV1MetricsDatasetDescriptorsGetRequest
} {
	m.lockV1MetricsDatasetDescriptorsGetExecute.Lock()
	defer m.lockV1MetricsDatasetDescriptorsGetExecute.Unlock()

	return m.calls.V1MetricsDatasetDescriptorsGetExecute
}

// V1MetricsDatasetQueryPost mocks base method by wrapping the associated func.
func (m *Version1Api) V1MetricsDatasetQueryPost(ctx context.Context, dataset string) github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV1MetricsDatasetQueryPostRequest {
	m.lockV1MetricsDatasetQueryPost.Lock()
	defer m.lockV1MetricsDatasetQueryPost.Unlock()

	if m.V1MetricsDatasetQueryPostFunc == nil {
		panic("mocker: Version1Api.V1MetricsDatasetQueryPostFunc is nil but Version1Api.V1MetricsDatasetQueryPost was called.")
	}

	call := struct {
		Ctx     context.Context
		Dataset string
	}{
		Ctx:     ctx,
		Dataset: dataset,
	}

	m.calls.V1MetricsDatasetQueryPost = append(m.calls.V1MetricsDatasetQueryPost, call)

	return m.V1MetricsDatasetQueryPostFunc(ctx, dataset)
}

// V1MetricsDatasetQueryPostCalled returns true if V1MetricsDatasetQueryPost was called at least once.
func (m *Version1Api) V1MetricsDatasetQueryPostCalled() bool {
	m.lockV1MetricsDatasetQueryPost.Lock()
	defer m.lockV1MetricsDatasetQueryPost.Unlock()

	return len(m.calls.V1MetricsDatasetQueryPost) > 0
}

// V1MetricsDatasetQueryPostCalls returns the calls made to V1MetricsDatasetQueryPost.
func (m *Version1Api) V1MetricsDatasetQueryPostCalls() []struct {
	Ctx     context.Context
	Dataset string
} {
	m.lockV1MetricsDatasetQueryPost.Lock()
	defer m.lockV1MetricsDatasetQueryPost.Unlock()

	return m.calls.V1MetricsDatasetQueryPost
}

// V1MetricsDatasetQueryPostExecute mocks base method by wrapping the associated func.
func (m *Version1Api) V1MetricsDatasetQueryPostExecute(r github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV1MetricsDatasetQueryPostRequest) (*github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.QueryResponse, *net_http.Response, error) {
	m.lockV1MetricsDatasetQueryPostExecute.Lock()
	defer m.lockV1MetricsDatasetQueryPostExecute.Unlock()

	if m.V1MetricsDatasetQueryPostExecuteFunc == nil {
		panic("mocker: Version1Api.V1MetricsDatasetQueryPostExecuteFunc is nil but Version1Api.V1MetricsDatasetQueryPostExecute was called.")
	}

	call := struct {
		R github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV1MetricsDatasetQueryPostRequest
	}{
		R: r,
	}

	m.calls.V1MetricsDatasetQueryPostExecute = append(m.calls.V1MetricsDatasetQueryPostExecute, call)

	return m.V1MetricsDatasetQueryPostExecuteFunc(r)
}

// V1MetricsDatasetQueryPostExecuteCalled returns true if V1MetricsDatasetQueryPostExecute was called at least once.
func (m *Version1Api) V1MetricsDatasetQueryPostExecuteCalled() bool {
	m.lockV1MetricsDatasetQueryPostExecute.Lock()
	defer m.lockV1MetricsDatasetQueryPostExecute.Unlock()

	return len(m.calls.V1MetricsDatasetQueryPostExecute) > 0
}

// V1MetricsDatasetQueryPostExecuteCalls returns the calls made to V1MetricsDatasetQueryPostExecute.
func (m *Version1Api) V1MetricsDatasetQueryPostExecuteCalls() []struct {
	R github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV1MetricsDatasetQueryPostRequest
} {
	m.lockV1MetricsDatasetQueryPostExecute.Lock()
	defer m.lockV1MetricsDatasetQueryPostExecute.Unlock()

	return m.calls.V1MetricsDatasetQueryPostExecute
}

// Reset resets the calls made to the mocked methods.
func (m *Version1Api) Reset() {
	m.lockV1MetricsDatasetAttributesPost.Lock()
	m.calls.V1MetricsDatasetAttributesPost = nil
	m.lockV1MetricsDatasetAttributesPost.Unlock()
	m.lockV1MetricsDatasetAttributesPostExecute.Lock()
	m.calls.V1MetricsDatasetAttributesPostExecute = nil
	m.lockV1MetricsDatasetAttributesPostExecute.Unlock()
	m.lockV1MetricsDatasetDescriptorsGet.Lock()
	m.calls.V1MetricsDatasetDescriptorsGet = nil
	m.lockV1MetricsDatasetDescriptorsGet.Unlock()
	m.lockV1MetricsDatasetDescriptorsGetExecute.Lock()
	m.calls.V1MetricsDatasetDescriptorsGetExecute = nil
	m.lockV1MetricsDatasetDescriptorsGetExecute.Unlock()
	m.lockV1MetricsDatasetQueryPost.Lock()
	m.calls.V1MetricsDatasetQueryPost = nil
	m.lockV1MetricsDatasetQueryPost.Unlock()
	m.lockV1MetricsDatasetQueryPostExecute.Lock()
	m.calls.V1MetricsDatasetQueryPostExecute = nil
	m.lockV1MetricsDatasetQueryPostExecute.Unlock()
}
