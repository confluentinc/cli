// Code generated by mocker. DO NOT EDIT.
// github.com/travisjeffery/mocker
// Source: api_version2.go

package mock

import (
	context "context"
	net_http "net/http"
	sync "sync"

	github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2 "github.com/confluentinc/ccloud-sdk-go-v2/metrics/v2"
)

// Version2Api is a mock of Version2Api interface
type Version2Api struct {
	lockV2MetricsDatasetAttributesPost sync.Mutex
	V2MetricsDatasetAttributesPostFunc func(ctx context.Context, dataset string) github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV2MetricsDatasetAttributesPostRequest

	lockV2MetricsDatasetAttributesPostExecute sync.Mutex
	V2MetricsDatasetAttributesPostExecuteFunc func(r github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV2MetricsDatasetAttributesPostRequest) (*github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.AttributesResponse, *net_http.Response, error)

	lockV2MetricsDatasetDescriptorsMetricsGet sync.Mutex
	V2MetricsDatasetDescriptorsMetricsGetFunc func(ctx context.Context, dataset string) github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV2MetricsDatasetDescriptorsMetricsGetRequest

	lockV2MetricsDatasetDescriptorsMetricsGetExecute sync.Mutex
	V2MetricsDatasetDescriptorsMetricsGetExecuteFunc func(r github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV2MetricsDatasetDescriptorsMetricsGetRequest) (*github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ListMetricDescriptorsResponse, *net_http.Response, error)

	lockV2MetricsDatasetDescriptorsResourcesGet sync.Mutex
	V2MetricsDatasetDescriptorsResourcesGetFunc func(ctx context.Context, dataset string) github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV2MetricsDatasetDescriptorsResourcesGetRequest

	lockV2MetricsDatasetDescriptorsResourcesGetExecute sync.Mutex
	V2MetricsDatasetDescriptorsResourcesGetExecuteFunc func(r github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV2MetricsDatasetDescriptorsResourcesGetRequest) (*github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ListResourceDescriptorsResponse, *net_http.Response, error)

	lockV2MetricsDatasetExportGet sync.Mutex
	V2MetricsDatasetExportGetFunc func(ctx context.Context, dataset string) github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV2MetricsDatasetExportGetRequest

	lockV2MetricsDatasetExportGetExecute sync.Mutex
	V2MetricsDatasetExportGetExecuteFunc func(r github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV2MetricsDatasetExportGetRequest) (string, *net_http.Response, error)

	lockV2MetricsDatasetQueryPost sync.Mutex
	V2MetricsDatasetQueryPostFunc func(ctx context.Context, dataset string) github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV2MetricsDatasetQueryPostRequest

	lockV2MetricsDatasetQueryPostExecute sync.Mutex
	V2MetricsDatasetQueryPostExecuteFunc func(r github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV2MetricsDatasetQueryPostRequest) (*github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.QueryResponse, *net_http.Response, error)

	calls struct {
		V2MetricsDatasetAttributesPost []struct {
			Ctx     context.Context
			Dataset string
		}
		V2MetricsDatasetAttributesPostExecute []struct {
			R github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV2MetricsDatasetAttributesPostRequest
		}
		V2MetricsDatasetDescriptorsMetricsGet []struct {
			Ctx     context.Context
			Dataset string
		}
		V2MetricsDatasetDescriptorsMetricsGetExecute []struct {
			R github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV2MetricsDatasetDescriptorsMetricsGetRequest
		}
		V2MetricsDatasetDescriptorsResourcesGet []struct {
			Ctx     context.Context
			Dataset string
		}
		V2MetricsDatasetDescriptorsResourcesGetExecute []struct {
			R github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV2MetricsDatasetDescriptorsResourcesGetRequest
		}
		V2MetricsDatasetExportGet []struct {
			Ctx     context.Context
			Dataset string
		}
		V2MetricsDatasetExportGetExecute []struct {
			R github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV2MetricsDatasetExportGetRequest
		}
		V2MetricsDatasetQueryPost []struct {
			Ctx     context.Context
			Dataset string
		}
		V2MetricsDatasetQueryPostExecute []struct {
			R github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV2MetricsDatasetQueryPostRequest
		}
	}
}

// V2MetricsDatasetAttributesPost mocks base method by wrapping the associated func.
func (m *Version2Api) V2MetricsDatasetAttributesPost(ctx context.Context, dataset string) github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV2MetricsDatasetAttributesPostRequest {
	m.lockV2MetricsDatasetAttributesPost.Lock()
	defer m.lockV2MetricsDatasetAttributesPost.Unlock()

	if m.V2MetricsDatasetAttributesPostFunc == nil {
		panic("mocker: Version2Api.V2MetricsDatasetAttributesPostFunc is nil but Version2Api.V2MetricsDatasetAttributesPost was called.")
	}

	call := struct {
		Ctx     context.Context
		Dataset string
	}{
		Ctx:     ctx,
		Dataset: dataset,
	}

	m.calls.V2MetricsDatasetAttributesPost = append(m.calls.V2MetricsDatasetAttributesPost, call)

	return m.V2MetricsDatasetAttributesPostFunc(ctx, dataset)
}

// V2MetricsDatasetAttributesPostCalled returns true if V2MetricsDatasetAttributesPost was called at least once.
func (m *Version2Api) V2MetricsDatasetAttributesPostCalled() bool {
	m.lockV2MetricsDatasetAttributesPost.Lock()
	defer m.lockV2MetricsDatasetAttributesPost.Unlock()

	return len(m.calls.V2MetricsDatasetAttributesPost) > 0
}

// V2MetricsDatasetAttributesPostCalls returns the calls made to V2MetricsDatasetAttributesPost.
func (m *Version2Api) V2MetricsDatasetAttributesPostCalls() []struct {
	Ctx     context.Context
	Dataset string
} {
	m.lockV2MetricsDatasetAttributesPost.Lock()
	defer m.lockV2MetricsDatasetAttributesPost.Unlock()

	return m.calls.V2MetricsDatasetAttributesPost
}

// V2MetricsDatasetAttributesPostExecute mocks base method by wrapping the associated func.
func (m *Version2Api) V2MetricsDatasetAttributesPostExecute(r github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV2MetricsDatasetAttributesPostRequest) (*github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.AttributesResponse, *net_http.Response, error) {
	m.lockV2MetricsDatasetAttributesPostExecute.Lock()
	defer m.lockV2MetricsDatasetAttributesPostExecute.Unlock()

	if m.V2MetricsDatasetAttributesPostExecuteFunc == nil {
		panic("mocker: Version2Api.V2MetricsDatasetAttributesPostExecuteFunc is nil but Version2Api.V2MetricsDatasetAttributesPostExecute was called.")
	}

	call := struct {
		R github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV2MetricsDatasetAttributesPostRequest
	}{
		R: r,
	}

	m.calls.V2MetricsDatasetAttributesPostExecute = append(m.calls.V2MetricsDatasetAttributesPostExecute, call)

	return m.V2MetricsDatasetAttributesPostExecuteFunc(r)
}

// V2MetricsDatasetAttributesPostExecuteCalled returns true if V2MetricsDatasetAttributesPostExecute was called at least once.
func (m *Version2Api) V2MetricsDatasetAttributesPostExecuteCalled() bool {
	m.lockV2MetricsDatasetAttributesPostExecute.Lock()
	defer m.lockV2MetricsDatasetAttributesPostExecute.Unlock()

	return len(m.calls.V2MetricsDatasetAttributesPostExecute) > 0
}

// V2MetricsDatasetAttributesPostExecuteCalls returns the calls made to V2MetricsDatasetAttributesPostExecute.
func (m *Version2Api) V2MetricsDatasetAttributesPostExecuteCalls() []struct {
	R github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV2MetricsDatasetAttributesPostRequest
} {
	m.lockV2MetricsDatasetAttributesPostExecute.Lock()
	defer m.lockV2MetricsDatasetAttributesPostExecute.Unlock()

	return m.calls.V2MetricsDatasetAttributesPostExecute
}

// V2MetricsDatasetDescriptorsMetricsGet mocks base method by wrapping the associated func.
func (m *Version2Api) V2MetricsDatasetDescriptorsMetricsGet(ctx context.Context, dataset string) github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV2MetricsDatasetDescriptorsMetricsGetRequest {
	m.lockV2MetricsDatasetDescriptorsMetricsGet.Lock()
	defer m.lockV2MetricsDatasetDescriptorsMetricsGet.Unlock()

	if m.V2MetricsDatasetDescriptorsMetricsGetFunc == nil {
		panic("mocker: Version2Api.V2MetricsDatasetDescriptorsMetricsGetFunc is nil but Version2Api.V2MetricsDatasetDescriptorsMetricsGet was called.")
	}

	call := struct {
		Ctx     context.Context
		Dataset string
	}{
		Ctx:     ctx,
		Dataset: dataset,
	}

	m.calls.V2MetricsDatasetDescriptorsMetricsGet = append(m.calls.V2MetricsDatasetDescriptorsMetricsGet, call)

	return m.V2MetricsDatasetDescriptorsMetricsGetFunc(ctx, dataset)
}

// V2MetricsDatasetDescriptorsMetricsGetCalled returns true if V2MetricsDatasetDescriptorsMetricsGet was called at least once.
func (m *Version2Api) V2MetricsDatasetDescriptorsMetricsGetCalled() bool {
	m.lockV2MetricsDatasetDescriptorsMetricsGet.Lock()
	defer m.lockV2MetricsDatasetDescriptorsMetricsGet.Unlock()

	return len(m.calls.V2MetricsDatasetDescriptorsMetricsGet) > 0
}

// V2MetricsDatasetDescriptorsMetricsGetCalls returns the calls made to V2MetricsDatasetDescriptorsMetricsGet.
func (m *Version2Api) V2MetricsDatasetDescriptorsMetricsGetCalls() []struct {
	Ctx     context.Context
	Dataset string
} {
	m.lockV2MetricsDatasetDescriptorsMetricsGet.Lock()
	defer m.lockV2MetricsDatasetDescriptorsMetricsGet.Unlock()

	return m.calls.V2MetricsDatasetDescriptorsMetricsGet
}

// V2MetricsDatasetDescriptorsMetricsGetExecute mocks base method by wrapping the associated func.
func (m *Version2Api) V2MetricsDatasetDescriptorsMetricsGetExecute(r github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV2MetricsDatasetDescriptorsMetricsGetRequest) (*github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ListMetricDescriptorsResponse, *net_http.Response, error) {
	m.lockV2MetricsDatasetDescriptorsMetricsGetExecute.Lock()
	defer m.lockV2MetricsDatasetDescriptorsMetricsGetExecute.Unlock()

	if m.V2MetricsDatasetDescriptorsMetricsGetExecuteFunc == nil {
		panic("mocker: Version2Api.V2MetricsDatasetDescriptorsMetricsGetExecuteFunc is nil but Version2Api.V2MetricsDatasetDescriptorsMetricsGetExecute was called.")
	}

	call := struct {
		R github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV2MetricsDatasetDescriptorsMetricsGetRequest
	}{
		R: r,
	}

	m.calls.V2MetricsDatasetDescriptorsMetricsGetExecute = append(m.calls.V2MetricsDatasetDescriptorsMetricsGetExecute, call)

	return m.V2MetricsDatasetDescriptorsMetricsGetExecuteFunc(r)
}

// V2MetricsDatasetDescriptorsMetricsGetExecuteCalled returns true if V2MetricsDatasetDescriptorsMetricsGetExecute was called at least once.
func (m *Version2Api) V2MetricsDatasetDescriptorsMetricsGetExecuteCalled() bool {
	m.lockV2MetricsDatasetDescriptorsMetricsGetExecute.Lock()
	defer m.lockV2MetricsDatasetDescriptorsMetricsGetExecute.Unlock()

	return len(m.calls.V2MetricsDatasetDescriptorsMetricsGetExecute) > 0
}

// V2MetricsDatasetDescriptorsMetricsGetExecuteCalls returns the calls made to V2MetricsDatasetDescriptorsMetricsGetExecute.
func (m *Version2Api) V2MetricsDatasetDescriptorsMetricsGetExecuteCalls() []struct {
	R github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV2MetricsDatasetDescriptorsMetricsGetRequest
} {
	m.lockV2MetricsDatasetDescriptorsMetricsGetExecute.Lock()
	defer m.lockV2MetricsDatasetDescriptorsMetricsGetExecute.Unlock()

	return m.calls.V2MetricsDatasetDescriptorsMetricsGetExecute
}

// V2MetricsDatasetDescriptorsResourcesGet mocks base method by wrapping the associated func.
func (m *Version2Api) V2MetricsDatasetDescriptorsResourcesGet(ctx context.Context, dataset string) github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV2MetricsDatasetDescriptorsResourcesGetRequest {
	m.lockV2MetricsDatasetDescriptorsResourcesGet.Lock()
	defer m.lockV2MetricsDatasetDescriptorsResourcesGet.Unlock()

	if m.V2MetricsDatasetDescriptorsResourcesGetFunc == nil {
		panic("mocker: Version2Api.V2MetricsDatasetDescriptorsResourcesGetFunc is nil but Version2Api.V2MetricsDatasetDescriptorsResourcesGet was called.")
	}

	call := struct {
		Ctx     context.Context
		Dataset string
	}{
		Ctx:     ctx,
		Dataset: dataset,
	}

	m.calls.V2MetricsDatasetDescriptorsResourcesGet = append(m.calls.V2MetricsDatasetDescriptorsResourcesGet, call)

	return m.V2MetricsDatasetDescriptorsResourcesGetFunc(ctx, dataset)
}

// V2MetricsDatasetDescriptorsResourcesGetCalled returns true if V2MetricsDatasetDescriptorsResourcesGet was called at least once.
func (m *Version2Api) V2MetricsDatasetDescriptorsResourcesGetCalled() bool {
	m.lockV2MetricsDatasetDescriptorsResourcesGet.Lock()
	defer m.lockV2MetricsDatasetDescriptorsResourcesGet.Unlock()

	return len(m.calls.V2MetricsDatasetDescriptorsResourcesGet) > 0
}

// V2MetricsDatasetDescriptorsResourcesGetCalls returns the calls made to V2MetricsDatasetDescriptorsResourcesGet.
func (m *Version2Api) V2MetricsDatasetDescriptorsResourcesGetCalls() []struct {
	Ctx     context.Context
	Dataset string
} {
	m.lockV2MetricsDatasetDescriptorsResourcesGet.Lock()
	defer m.lockV2MetricsDatasetDescriptorsResourcesGet.Unlock()

	return m.calls.V2MetricsDatasetDescriptorsResourcesGet
}

// V2MetricsDatasetDescriptorsResourcesGetExecute mocks base method by wrapping the associated func.
func (m *Version2Api) V2MetricsDatasetDescriptorsResourcesGetExecute(r github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV2MetricsDatasetDescriptorsResourcesGetRequest) (*github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ListResourceDescriptorsResponse, *net_http.Response, error) {
	m.lockV2MetricsDatasetDescriptorsResourcesGetExecute.Lock()
	defer m.lockV2MetricsDatasetDescriptorsResourcesGetExecute.Unlock()

	if m.V2MetricsDatasetDescriptorsResourcesGetExecuteFunc == nil {
		panic("mocker: Version2Api.V2MetricsDatasetDescriptorsResourcesGetExecuteFunc is nil but Version2Api.V2MetricsDatasetDescriptorsResourcesGetExecute was called.")
	}

	call := struct {
		R github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV2MetricsDatasetDescriptorsResourcesGetRequest
	}{
		R: r,
	}

	m.calls.V2MetricsDatasetDescriptorsResourcesGetExecute = append(m.calls.V2MetricsDatasetDescriptorsResourcesGetExecute, call)

	return m.V2MetricsDatasetDescriptorsResourcesGetExecuteFunc(r)
}

// V2MetricsDatasetDescriptorsResourcesGetExecuteCalled returns true if V2MetricsDatasetDescriptorsResourcesGetExecute was called at least once.
func (m *Version2Api) V2MetricsDatasetDescriptorsResourcesGetExecuteCalled() bool {
	m.lockV2MetricsDatasetDescriptorsResourcesGetExecute.Lock()
	defer m.lockV2MetricsDatasetDescriptorsResourcesGetExecute.Unlock()

	return len(m.calls.V2MetricsDatasetDescriptorsResourcesGetExecute) > 0
}

// V2MetricsDatasetDescriptorsResourcesGetExecuteCalls returns the calls made to V2MetricsDatasetDescriptorsResourcesGetExecute.
func (m *Version2Api) V2MetricsDatasetDescriptorsResourcesGetExecuteCalls() []struct {
	R github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV2MetricsDatasetDescriptorsResourcesGetRequest
} {
	m.lockV2MetricsDatasetDescriptorsResourcesGetExecute.Lock()
	defer m.lockV2MetricsDatasetDescriptorsResourcesGetExecute.Unlock()

	return m.calls.V2MetricsDatasetDescriptorsResourcesGetExecute
}

// V2MetricsDatasetExportGet mocks base method by wrapping the associated func.
func (m *Version2Api) V2MetricsDatasetExportGet(ctx context.Context, dataset string) github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV2MetricsDatasetExportGetRequest {
	m.lockV2MetricsDatasetExportGet.Lock()
	defer m.lockV2MetricsDatasetExportGet.Unlock()

	if m.V2MetricsDatasetExportGetFunc == nil {
		panic("mocker: Version2Api.V2MetricsDatasetExportGetFunc is nil but Version2Api.V2MetricsDatasetExportGet was called.")
	}

	call := struct {
		Ctx     context.Context
		Dataset string
	}{
		Ctx:     ctx,
		Dataset: dataset,
	}

	m.calls.V2MetricsDatasetExportGet = append(m.calls.V2MetricsDatasetExportGet, call)

	return m.V2MetricsDatasetExportGetFunc(ctx, dataset)
}

// V2MetricsDatasetExportGetCalled returns true if V2MetricsDatasetExportGet was called at least once.
func (m *Version2Api) V2MetricsDatasetExportGetCalled() bool {
	m.lockV2MetricsDatasetExportGet.Lock()
	defer m.lockV2MetricsDatasetExportGet.Unlock()

	return len(m.calls.V2MetricsDatasetExportGet) > 0
}

// V2MetricsDatasetExportGetCalls returns the calls made to V2MetricsDatasetExportGet.
func (m *Version2Api) V2MetricsDatasetExportGetCalls() []struct {
	Ctx     context.Context
	Dataset string
} {
	m.lockV2MetricsDatasetExportGet.Lock()
	defer m.lockV2MetricsDatasetExportGet.Unlock()

	return m.calls.V2MetricsDatasetExportGet
}

// V2MetricsDatasetExportGetExecute mocks base method by wrapping the associated func.
func (m *Version2Api) V2MetricsDatasetExportGetExecute(r github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV2MetricsDatasetExportGetRequest) (string, *net_http.Response, error) {
	m.lockV2MetricsDatasetExportGetExecute.Lock()
	defer m.lockV2MetricsDatasetExportGetExecute.Unlock()

	if m.V2MetricsDatasetExportGetExecuteFunc == nil {
		panic("mocker: Version2Api.V2MetricsDatasetExportGetExecuteFunc is nil but Version2Api.V2MetricsDatasetExportGetExecute was called.")
	}

	call := struct {
		R github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV2MetricsDatasetExportGetRequest
	}{
		R: r,
	}

	m.calls.V2MetricsDatasetExportGetExecute = append(m.calls.V2MetricsDatasetExportGetExecute, call)

	return m.V2MetricsDatasetExportGetExecuteFunc(r)
}

// V2MetricsDatasetExportGetExecuteCalled returns true if V2MetricsDatasetExportGetExecute was called at least once.
func (m *Version2Api) V2MetricsDatasetExportGetExecuteCalled() bool {
	m.lockV2MetricsDatasetExportGetExecute.Lock()
	defer m.lockV2MetricsDatasetExportGetExecute.Unlock()

	return len(m.calls.V2MetricsDatasetExportGetExecute) > 0
}

// V2MetricsDatasetExportGetExecuteCalls returns the calls made to V2MetricsDatasetExportGetExecute.
func (m *Version2Api) V2MetricsDatasetExportGetExecuteCalls() []struct {
	R github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV2MetricsDatasetExportGetRequest
} {
	m.lockV2MetricsDatasetExportGetExecute.Lock()
	defer m.lockV2MetricsDatasetExportGetExecute.Unlock()

	return m.calls.V2MetricsDatasetExportGetExecute
}

// V2MetricsDatasetQueryPost mocks base method by wrapping the associated func.
func (m *Version2Api) V2MetricsDatasetQueryPost(ctx context.Context, dataset string) github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV2MetricsDatasetQueryPostRequest {
	m.lockV2MetricsDatasetQueryPost.Lock()
	defer m.lockV2MetricsDatasetQueryPost.Unlock()

	if m.V2MetricsDatasetQueryPostFunc == nil {
		panic("mocker: Version2Api.V2MetricsDatasetQueryPostFunc is nil but Version2Api.V2MetricsDatasetQueryPost was called.")
	}

	call := struct {
		Ctx     context.Context
		Dataset string
	}{
		Ctx:     ctx,
		Dataset: dataset,
	}

	m.calls.V2MetricsDatasetQueryPost = append(m.calls.V2MetricsDatasetQueryPost, call)

	return m.V2MetricsDatasetQueryPostFunc(ctx, dataset)
}

// V2MetricsDatasetQueryPostCalled returns true if V2MetricsDatasetQueryPost was called at least once.
func (m *Version2Api) V2MetricsDatasetQueryPostCalled() bool {
	m.lockV2MetricsDatasetQueryPost.Lock()
	defer m.lockV2MetricsDatasetQueryPost.Unlock()

	return len(m.calls.V2MetricsDatasetQueryPost) > 0
}

// V2MetricsDatasetQueryPostCalls returns the calls made to V2MetricsDatasetQueryPost.
func (m *Version2Api) V2MetricsDatasetQueryPostCalls() []struct {
	Ctx     context.Context
	Dataset string
} {
	m.lockV2MetricsDatasetQueryPost.Lock()
	defer m.lockV2MetricsDatasetQueryPost.Unlock()

	return m.calls.V2MetricsDatasetQueryPost
}

// V2MetricsDatasetQueryPostExecute mocks base method by wrapping the associated func.
func (m *Version2Api) V2MetricsDatasetQueryPostExecute(r github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV2MetricsDatasetQueryPostRequest) (*github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.QueryResponse, *net_http.Response, error) {
	m.lockV2MetricsDatasetQueryPostExecute.Lock()
	defer m.lockV2MetricsDatasetQueryPostExecute.Unlock()

	if m.V2MetricsDatasetQueryPostExecuteFunc == nil {
		panic("mocker: Version2Api.V2MetricsDatasetQueryPostExecuteFunc is nil but Version2Api.V2MetricsDatasetQueryPostExecute was called.")
	}

	call := struct {
		R github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV2MetricsDatasetQueryPostRequest
	}{
		R: r,
	}

	m.calls.V2MetricsDatasetQueryPostExecute = append(m.calls.V2MetricsDatasetQueryPostExecute, call)

	return m.V2MetricsDatasetQueryPostExecuteFunc(r)
}

// V2MetricsDatasetQueryPostExecuteCalled returns true if V2MetricsDatasetQueryPostExecute was called at least once.
func (m *Version2Api) V2MetricsDatasetQueryPostExecuteCalled() bool {
	m.lockV2MetricsDatasetQueryPostExecute.Lock()
	defer m.lockV2MetricsDatasetQueryPostExecute.Unlock()

	return len(m.calls.V2MetricsDatasetQueryPostExecute) > 0
}

// V2MetricsDatasetQueryPostExecuteCalls returns the calls made to V2MetricsDatasetQueryPostExecute.
func (m *Version2Api) V2MetricsDatasetQueryPostExecuteCalls() []struct {
	R github_com_confluentinc_ccloud_sdk_go_v2_metrics_v2.ApiV2MetricsDatasetQueryPostRequest
} {
	m.lockV2MetricsDatasetQueryPostExecute.Lock()
	defer m.lockV2MetricsDatasetQueryPostExecute.Unlock()

	return m.calls.V2MetricsDatasetQueryPostExecute
}

// Reset resets the calls made to the mocked methods.
func (m *Version2Api) Reset() {
	m.lockV2MetricsDatasetAttributesPost.Lock()
	m.calls.V2MetricsDatasetAttributesPost = nil
	m.lockV2MetricsDatasetAttributesPost.Unlock()
	m.lockV2MetricsDatasetAttributesPostExecute.Lock()
	m.calls.V2MetricsDatasetAttributesPostExecute = nil
	m.lockV2MetricsDatasetAttributesPostExecute.Unlock()
	m.lockV2MetricsDatasetDescriptorsMetricsGet.Lock()
	m.calls.V2MetricsDatasetDescriptorsMetricsGet = nil
	m.lockV2MetricsDatasetDescriptorsMetricsGet.Unlock()
	m.lockV2MetricsDatasetDescriptorsMetricsGetExecute.Lock()
	m.calls.V2MetricsDatasetDescriptorsMetricsGetExecute = nil
	m.lockV2MetricsDatasetDescriptorsMetricsGetExecute.Unlock()
	m.lockV2MetricsDatasetDescriptorsResourcesGet.Lock()
	m.calls.V2MetricsDatasetDescriptorsResourcesGet = nil
	m.lockV2MetricsDatasetDescriptorsResourcesGet.Unlock()
	m.lockV2MetricsDatasetDescriptorsResourcesGetExecute.Lock()
	m.calls.V2MetricsDatasetDescriptorsResourcesGetExecute = nil
	m.lockV2MetricsDatasetDescriptorsResourcesGetExecute.Unlock()
	m.lockV2MetricsDatasetExportGet.Lock()
	m.calls.V2MetricsDatasetExportGet = nil
	m.lockV2MetricsDatasetExportGet.Unlock()
	m.lockV2MetricsDatasetExportGetExecute.Lock()
	m.calls.V2MetricsDatasetExportGetExecute = nil
	m.lockV2MetricsDatasetExportGetExecute.Unlock()
	m.lockV2MetricsDatasetQueryPost.Lock()
	m.calls.V2MetricsDatasetQueryPost = nil
	m.lockV2MetricsDatasetQueryPost.Unlock()
	m.lockV2MetricsDatasetQueryPostExecute.Lock()
	m.calls.V2MetricsDatasetQueryPostExecute = nil
	m.lockV2MetricsDatasetQueryPostExecute.Unlock()
}
