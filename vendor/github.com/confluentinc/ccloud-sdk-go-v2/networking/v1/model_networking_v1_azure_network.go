// Copyright 2021 Confluent Inc. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*
Network API

Network API

API version: 0.0.1-alpha1
Contact: cire-traffic@confluent.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"bytes"
	"encoding/json"
)

import (
	"reflect"
)

// NetworkingV1AzureNetwork The Azure network details.
type NetworkingV1AzureNetwork struct {
	// Network kind type.
	Kind string `json:"kind,omitempty"`
	// The resource ID of the Confluent Cloud VNet.
	Vnet string `json:"vnet,omitempty"`
	// The Azure Subscription ID associated with the Confluent Cloud VPC.
	Subscription string `json:"subscription,omitempty"`
	// The mapping of zones to Private Link Service Aliases if available. Keys are zones and values are [Azure Private Link Service Aliases](https://docs.microsoft.com/en-us/azure/private-link/private-link-service-overview#share-your-service).
	PrivateLinkServiceAliases *map[string]string `json:"private_link_service_aliases,omitempty"`
	// The mapping of zones to Private Link Service Resource IDs if available. Keys are zones and values are [Azure Private Link Service Resource IDs](https://docs.microsoft.com/en-us/azure/private-link/private-link-service-overview#share-your-service).
	PrivateLinkServiceResourceIds *map[string]string `json:"private_link_service_resource_ids,omitempty"`
}

// NewNetworkingV1AzureNetwork instantiates a new NetworkingV1AzureNetwork object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkingV1AzureNetwork(kind string, vnet string, subscription string) *NetworkingV1AzureNetwork {
	this := NetworkingV1AzureNetwork{}
	this.Kind = kind
	this.Vnet = vnet
	this.Subscription = subscription
	return &this
}

// NewNetworkingV1AzureNetworkWithDefaults instantiates a new NetworkingV1AzureNetwork object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkingV1AzureNetworkWithDefaults() *NetworkingV1AzureNetwork {
	this := NetworkingV1AzureNetwork{}
	return &this
}

// GetKind returns the Kind field value
func (o *NetworkingV1AzureNetwork) GetKind() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Kind
}

// GetKindOk returns a tuple with the Kind field value
// and a boolean to check if the value has been set.
func (o *NetworkingV1AzureNetwork) GetKindOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Kind, true
}

// SetKind sets field value
func (o *NetworkingV1AzureNetwork) SetKind(v string) {
	o.Kind = v
}

// GetVnet returns the Vnet field value
func (o *NetworkingV1AzureNetwork) GetVnet() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Vnet
}

// GetVnetOk returns a tuple with the Vnet field value
// and a boolean to check if the value has been set.
func (o *NetworkingV1AzureNetwork) GetVnetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Vnet, true
}

// SetVnet sets field value
func (o *NetworkingV1AzureNetwork) SetVnet(v string) {
	o.Vnet = v
}

// GetSubscription returns the Subscription field value
func (o *NetworkingV1AzureNetwork) GetSubscription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Subscription
}

// GetSubscriptionOk returns a tuple with the Subscription field value
// and a boolean to check if the value has been set.
func (o *NetworkingV1AzureNetwork) GetSubscriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Subscription, true
}

// SetSubscription sets field value
func (o *NetworkingV1AzureNetwork) SetSubscription(v string) {
	o.Subscription = v
}

// GetPrivateLinkServiceAliases returns the PrivateLinkServiceAliases field value if set, zero value otherwise.
func (o *NetworkingV1AzureNetwork) GetPrivateLinkServiceAliases() map[string]string {
	if o == nil || o.PrivateLinkServiceAliases == nil {
		var ret map[string]string
		return ret
	}
	return *o.PrivateLinkServiceAliases
}

// GetPrivateLinkServiceAliasesOk returns a tuple with the PrivateLinkServiceAliases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkingV1AzureNetwork) GetPrivateLinkServiceAliasesOk() (*map[string]string, bool) {
	if o == nil || o.PrivateLinkServiceAliases == nil {
		return nil, false
	}
	return o.PrivateLinkServiceAliases, true
}

// HasPrivateLinkServiceAliases returns a boolean if a field has been set.
func (o *NetworkingV1AzureNetwork) HasPrivateLinkServiceAliases() bool {
	if o != nil && o.PrivateLinkServiceAliases != nil {
		return true
	}

	return false
}

// SetPrivateLinkServiceAliases gets a reference to the given map[string]string and assigns it to the PrivateLinkServiceAliases field.
func (o *NetworkingV1AzureNetwork) SetPrivateLinkServiceAliases(v map[string]string) {
	o.PrivateLinkServiceAliases = &v
}

// GetPrivateLinkServiceResourceIds returns the PrivateLinkServiceResourceIds field value if set, zero value otherwise.
func (o *NetworkingV1AzureNetwork) GetPrivateLinkServiceResourceIds() map[string]string {
	if o == nil || o.PrivateLinkServiceResourceIds == nil {
		var ret map[string]string
		return ret
	}
	return *o.PrivateLinkServiceResourceIds
}

// GetPrivateLinkServiceResourceIdsOk returns a tuple with the PrivateLinkServiceResourceIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkingV1AzureNetwork) GetPrivateLinkServiceResourceIdsOk() (*map[string]string, bool) {
	if o == nil || o.PrivateLinkServiceResourceIds == nil {
		return nil, false
	}
	return o.PrivateLinkServiceResourceIds, true
}

// HasPrivateLinkServiceResourceIds returns a boolean if a field has been set.
func (o *NetworkingV1AzureNetwork) HasPrivateLinkServiceResourceIds() bool {
	if o != nil && o.PrivateLinkServiceResourceIds != nil {
		return true
	}

	return false
}

// SetPrivateLinkServiceResourceIds gets a reference to the given map[string]string and assigns it to the PrivateLinkServiceResourceIds field.
func (o *NetworkingV1AzureNetwork) SetPrivateLinkServiceResourceIds(v map[string]string) {
	o.PrivateLinkServiceResourceIds = &v
}

// Redact resets all sensitive fields to their zero value.
func (o *NetworkingV1AzureNetwork) Redact() {
	o.recurseRedact(&o.Kind)
	o.recurseRedact(&o.Vnet)
	o.recurseRedact(&o.Subscription)
	o.recurseRedact(o.PrivateLinkServiceAliases)
	o.recurseRedact(o.PrivateLinkServiceResourceIds)
}

func (o *NetworkingV1AzureNetwork) recurseRedact(v interface{}) {
	type redactor interface {
		Redact()
	}
	if r, ok := v.(redactor); ok {
		r.Redact()
	} else {
		val := reflect.ValueOf(v)
		if val.Kind() == reflect.Ptr {
			val = val.Elem()
		}
		switch val.Kind() {
		case reflect.Slice, reflect.Array:
			for i := 0; i < val.Len(); i++ {
				// support data types declared without pointers
				o.recurseRedact(val.Index(i).Interface())
				// ... and data types that were declared without but need pointers (for Redact)
				if val.Index(i).CanAddr() {
					o.recurseRedact(val.Index(i).Addr().Interface())
				}
			}
		}
	}
}

func (o NetworkingV1AzureNetwork) zeroField(v interface{}) {
	p := reflect.ValueOf(v).Elem()
	p.Set(reflect.Zero(p.Type()))
}

func (o NetworkingV1AzureNetwork) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["kind"] = o.Kind
	}
	if true {
		toSerialize["vnet"] = o.Vnet
	}
	if true {
		toSerialize["subscription"] = o.Subscription
	}
	if o.PrivateLinkServiceAliases != nil {
		toSerialize["private_link_service_aliases"] = o.PrivateLinkServiceAliases
	}
	if o.PrivateLinkServiceResourceIds != nil {
		toSerialize["private_link_service_resource_ids"] = o.PrivateLinkServiceResourceIds
	}
	buffer := &bytes.Buffer{}
	encoder := json.NewEncoder(buffer)
	encoder.SetEscapeHTML(false)
	err := encoder.Encode(toSerialize)
	return buffer.Bytes(), err
}

type NullableNetworkingV1AzureNetwork struct {
	value *NetworkingV1AzureNetwork
	isSet bool
}

func (v NullableNetworkingV1AzureNetwork) Get() *NetworkingV1AzureNetwork {
	return v.value
}

func (v *NullableNetworkingV1AzureNetwork) Set(val *NetworkingV1AzureNetwork) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkingV1AzureNetwork) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkingV1AzureNetwork) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkingV1AzureNetwork(val *NetworkingV1AzureNetwork) *NullableNetworkingV1AzureNetwork {
	return &NullableNetworkingV1AzureNetwork{value: val, isSet: true}
}

func (v NullableNetworkingV1AzureNetwork) MarshalJSON() ([]byte, error) {
	buffer := &bytes.Buffer{}
	encoder := json.NewEncoder(buffer)
	encoder.SetEscapeHTML(false)
	err := encoder.Encode(v.value)
	return buffer.Bytes(), err
}

func (v *NullableNetworkingV1AzureNetwork) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
