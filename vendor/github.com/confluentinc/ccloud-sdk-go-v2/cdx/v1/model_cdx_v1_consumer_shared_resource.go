// Copyright 2021 Confluent Inc. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*
Stream Share APIs

# Introduction

API version: 0.1.0-alpha0
Contact: cdx@confluent.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

import (
	"reflect"
)

// CdxV1ConsumerSharedResource Resources accessible by the consumer   ## The Consumer Shared Resources Model <SchemaDefinition schemaRef=\"#/components/schemas/cdx.v1.ConsumerSharedResource\" />
type CdxV1ConsumerSharedResource struct {
	// APIVersion defines the schema version of this representation of a resource.
	ApiVersion *string `json:"api_version,omitempty"`
	// Kind defines the object this REST resource represents.
	Kind *string `json:"kind,omitempty"`
	// ID is the \"natural identifier\" for an object within its scope/namespace; it is normally unique across time but not space. That is, you can assume that the ID will not be reclaimed and reused after an object is deleted (\"time\"); however, it may collide with IDs for other object `kinds` or objects of the same `kind` within a different scope/namespace (\"space\").
	Id                     *string               `json:"id,omitempty"`
	Metadata               *ObjectMeta           `json:"metadata,omitempty"`
	Cloud                  *string               `json:"cloud,omitempty"`
	NetworkConnectionTypes *CdxV1ConnectionTypes `json:"network_connection_types,omitempty"`
	// Consumer resource display name
	DisplayName *string `json:"display_name,omitempty"`
	// Description of consumer resource
	Description *string `json:"description,omitempty"`
	// list of tags
	Tags *[]string `json:"tags,omitempty"`
	// List of schemas in JSON format. This field is work in progress and subject to changes.
	Schemas *[]CdxV1Schema `json:"schemas,omitempty"`
	// Shared resource's organization name
	OrganizationName *string `json:"organization_name,omitempty"`
	// Shared resource's organization description
	OrganizationDescription *string `json:"organization_description,omitempty"`
	// Email of the shared resource's organization contact
	OrganizationContact *string `json:"organization_contact,omitempty"`
	// Resource logo url
	LogoUrl *string `json:"logo_url,omitempty"`
}

// NewCdxV1ConsumerSharedResource instantiates a new CdxV1ConsumerSharedResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCdxV1ConsumerSharedResource() *CdxV1ConsumerSharedResource {
	this := CdxV1ConsumerSharedResource{}
	return &this
}

// NewCdxV1ConsumerSharedResourceWithDefaults instantiates a new CdxV1ConsumerSharedResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCdxV1ConsumerSharedResourceWithDefaults() *CdxV1ConsumerSharedResource {
	this := CdxV1ConsumerSharedResource{}
	return &this
}

// GetApiVersion returns the ApiVersion field value if set, zero value otherwise.
func (o *CdxV1ConsumerSharedResource) GetApiVersion() string {
	if o == nil || o.ApiVersion == nil {
		var ret string
		return ret
	}
	return *o.ApiVersion
}

// GetApiVersionOk returns a tuple with the ApiVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdxV1ConsumerSharedResource) GetApiVersionOk() (*string, bool) {
	if o == nil || o.ApiVersion == nil {
		return nil, false
	}
	return o.ApiVersion, true
}

// HasApiVersion returns a boolean if a field has been set.
func (o *CdxV1ConsumerSharedResource) HasApiVersion() bool {
	if o != nil && o.ApiVersion != nil {
		return true
	}

	return false
}

// SetApiVersion gets a reference to the given string and assigns it to the ApiVersion field.
func (o *CdxV1ConsumerSharedResource) SetApiVersion(v string) {
	o.ApiVersion = &v
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *CdxV1ConsumerSharedResource) GetKind() string {
	if o == nil || o.Kind == nil {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdxV1ConsumerSharedResource) GetKindOk() (*string, bool) {
	if o == nil || o.Kind == nil {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *CdxV1ConsumerSharedResource) HasKind() bool {
	if o != nil && o.Kind != nil {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *CdxV1ConsumerSharedResource) SetKind(v string) {
	o.Kind = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CdxV1ConsumerSharedResource) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdxV1ConsumerSharedResource) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CdxV1ConsumerSharedResource) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CdxV1ConsumerSharedResource) SetId(v string) {
	o.Id = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *CdxV1ConsumerSharedResource) GetMetadata() ObjectMeta {
	if o == nil || o.Metadata == nil {
		var ret ObjectMeta
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdxV1ConsumerSharedResource) GetMetadataOk() (*ObjectMeta, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *CdxV1ConsumerSharedResource) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given ObjectMeta and assigns it to the Metadata field.
func (o *CdxV1ConsumerSharedResource) SetMetadata(v ObjectMeta) {
	o.Metadata = &v
}

// GetCloud returns the Cloud field value if set, zero value otherwise.
func (o *CdxV1ConsumerSharedResource) GetCloud() string {
	if o == nil || o.Cloud == nil {
		var ret string
		return ret
	}
	return *o.Cloud
}

// GetCloudOk returns a tuple with the Cloud field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdxV1ConsumerSharedResource) GetCloudOk() (*string, bool) {
	if o == nil || o.Cloud == nil {
		return nil, false
	}
	return o.Cloud, true
}

// HasCloud returns a boolean if a field has been set.
func (o *CdxV1ConsumerSharedResource) HasCloud() bool {
	if o != nil && o.Cloud != nil {
		return true
	}

	return false
}

// SetCloud gets a reference to the given string and assigns it to the Cloud field.
func (o *CdxV1ConsumerSharedResource) SetCloud(v string) {
	o.Cloud = &v
}

// GetNetworkConnectionTypes returns the NetworkConnectionTypes field value if set, zero value otherwise.
func (o *CdxV1ConsumerSharedResource) GetNetworkConnectionTypes() CdxV1ConnectionTypes {
	if o == nil || o.NetworkConnectionTypes == nil {
		var ret CdxV1ConnectionTypes
		return ret
	}
	return *o.NetworkConnectionTypes
}

// GetNetworkConnectionTypesOk returns a tuple with the NetworkConnectionTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdxV1ConsumerSharedResource) GetNetworkConnectionTypesOk() (*CdxV1ConnectionTypes, bool) {
	if o == nil || o.NetworkConnectionTypes == nil {
		return nil, false
	}
	return o.NetworkConnectionTypes, true
}

// HasNetworkConnectionTypes returns a boolean if a field has been set.
func (o *CdxV1ConsumerSharedResource) HasNetworkConnectionTypes() bool {
	if o != nil && o.NetworkConnectionTypes != nil {
		return true
	}

	return false
}

// SetNetworkConnectionTypes gets a reference to the given CdxV1ConnectionTypes and assigns it to the NetworkConnectionTypes field.
func (o *CdxV1ConsumerSharedResource) SetNetworkConnectionTypes(v CdxV1ConnectionTypes) {
	o.NetworkConnectionTypes = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *CdxV1ConsumerSharedResource) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdxV1ConsumerSharedResource) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *CdxV1ConsumerSharedResource) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *CdxV1ConsumerSharedResource) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CdxV1ConsumerSharedResource) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdxV1ConsumerSharedResource) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CdxV1ConsumerSharedResource) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CdxV1ConsumerSharedResource) SetDescription(v string) {
	o.Description = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *CdxV1ConsumerSharedResource) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdxV1ConsumerSharedResource) GetTagsOk() (*[]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *CdxV1ConsumerSharedResource) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *CdxV1ConsumerSharedResource) SetTags(v []string) {
	o.Tags = &v
}

// GetSchemas returns the Schemas field value if set, zero value otherwise.
func (o *CdxV1ConsumerSharedResource) GetSchemas() []CdxV1Schema {
	if o == nil || o.Schemas == nil {
		var ret []CdxV1Schema
		return ret
	}
	return *o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdxV1ConsumerSharedResource) GetSchemasOk() (*[]CdxV1Schema, bool) {
	if o == nil || o.Schemas == nil {
		return nil, false
	}
	return o.Schemas, true
}

// HasSchemas returns a boolean if a field has been set.
func (o *CdxV1ConsumerSharedResource) HasSchemas() bool {
	if o != nil && o.Schemas != nil {
		return true
	}

	return false
}

// SetSchemas gets a reference to the given []CdxV1Schema and assigns it to the Schemas field.
func (o *CdxV1ConsumerSharedResource) SetSchemas(v []CdxV1Schema) {
	o.Schemas = &v
}

// GetOrganizationName returns the OrganizationName field value if set, zero value otherwise.
func (o *CdxV1ConsumerSharedResource) GetOrganizationName() string {
	if o == nil || o.OrganizationName == nil {
		var ret string
		return ret
	}
	return *o.OrganizationName
}

// GetOrganizationNameOk returns a tuple with the OrganizationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdxV1ConsumerSharedResource) GetOrganizationNameOk() (*string, bool) {
	if o == nil || o.OrganizationName == nil {
		return nil, false
	}
	return o.OrganizationName, true
}

// HasOrganizationName returns a boolean if a field has been set.
func (o *CdxV1ConsumerSharedResource) HasOrganizationName() bool {
	if o != nil && o.OrganizationName != nil {
		return true
	}

	return false
}

// SetOrganizationName gets a reference to the given string and assigns it to the OrganizationName field.
func (o *CdxV1ConsumerSharedResource) SetOrganizationName(v string) {
	o.OrganizationName = &v
}

// GetOrganizationDescription returns the OrganizationDescription field value if set, zero value otherwise.
func (o *CdxV1ConsumerSharedResource) GetOrganizationDescription() string {
	if o == nil || o.OrganizationDescription == nil {
		var ret string
		return ret
	}
	return *o.OrganizationDescription
}

// GetOrganizationDescriptionOk returns a tuple with the OrganizationDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdxV1ConsumerSharedResource) GetOrganizationDescriptionOk() (*string, bool) {
	if o == nil || o.OrganizationDescription == nil {
		return nil, false
	}
	return o.OrganizationDescription, true
}

// HasOrganizationDescription returns a boolean if a field has been set.
func (o *CdxV1ConsumerSharedResource) HasOrganizationDescription() bool {
	if o != nil && o.OrganizationDescription != nil {
		return true
	}

	return false
}

// SetOrganizationDescription gets a reference to the given string and assigns it to the OrganizationDescription field.
func (o *CdxV1ConsumerSharedResource) SetOrganizationDescription(v string) {
	o.OrganizationDescription = &v
}

// GetOrganizationContact returns the OrganizationContact field value if set, zero value otherwise.
func (o *CdxV1ConsumerSharedResource) GetOrganizationContact() string {
	if o == nil || o.OrganizationContact == nil {
		var ret string
		return ret
	}
	return *o.OrganizationContact
}

// GetOrganizationContactOk returns a tuple with the OrganizationContact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdxV1ConsumerSharedResource) GetOrganizationContactOk() (*string, bool) {
	if o == nil || o.OrganizationContact == nil {
		return nil, false
	}
	return o.OrganizationContact, true
}

// HasOrganizationContact returns a boolean if a field has been set.
func (o *CdxV1ConsumerSharedResource) HasOrganizationContact() bool {
	if o != nil && o.OrganizationContact != nil {
		return true
	}

	return false
}

// SetOrganizationContact gets a reference to the given string and assigns it to the OrganizationContact field.
func (o *CdxV1ConsumerSharedResource) SetOrganizationContact(v string) {
	o.OrganizationContact = &v
}

// GetLogoUrl returns the LogoUrl field value if set, zero value otherwise.
func (o *CdxV1ConsumerSharedResource) GetLogoUrl() string {
	if o == nil || o.LogoUrl == nil {
		var ret string
		return ret
	}
	return *o.LogoUrl
}

// GetLogoUrlOk returns a tuple with the LogoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdxV1ConsumerSharedResource) GetLogoUrlOk() (*string, bool) {
	if o == nil || o.LogoUrl == nil {
		return nil, false
	}
	return o.LogoUrl, true
}

// HasLogoUrl returns a boolean if a field has been set.
func (o *CdxV1ConsumerSharedResource) HasLogoUrl() bool {
	if o != nil && o.LogoUrl != nil {
		return true
	}

	return false
}

// SetLogoUrl gets a reference to the given string and assigns it to the LogoUrl field.
func (o *CdxV1ConsumerSharedResource) SetLogoUrl(v string) {
	o.LogoUrl = &v
}

// Redact resets all sensitive fields to their zero value.
func (o *CdxV1ConsumerSharedResource) Redact() {
	o.recurseRedact(o.ApiVersion)
	o.recurseRedact(o.Kind)
	o.recurseRedact(o.Id)
	o.recurseRedact(o.Metadata)
	o.recurseRedact(o.Cloud)
	o.recurseRedact(o.NetworkConnectionTypes)
	o.recurseRedact(o.DisplayName)
	o.recurseRedact(o.Description)
	o.recurseRedact(o.Tags)
	o.recurseRedact(o.Schemas)
	o.recurseRedact(o.OrganizationName)
	o.recurseRedact(o.OrganizationDescription)
	o.recurseRedact(o.OrganizationContact)
	o.recurseRedact(o.LogoUrl)
}

func (o *CdxV1ConsumerSharedResource) recurseRedact(v interface{}) {
	type redactor interface {
		Redact()
	}
	if r, ok := v.(redactor); ok {
		r.Redact()
	} else {
		val := reflect.ValueOf(v)
		if val.Kind() == reflect.Ptr {
			val = val.Elem()
		}
		switch val.Kind() {
		case reflect.Slice, reflect.Array:
			for i := 0; i < val.Len(); i++ {
				// support data types declared without pointers
				o.recurseRedact(val.Index(i).Interface())
				// ... and data types that were declared without but need pointers (for Redact)
				if val.Index(i).CanAddr() {
					o.recurseRedact(val.Index(i).Addr().Interface())
				}
			}
		}
	}
}

func (o CdxV1ConsumerSharedResource) zeroField(v interface{}) {
	p := reflect.ValueOf(v).Elem()
	p.Set(reflect.Zero(p.Type()))
}

func (o CdxV1ConsumerSharedResource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ApiVersion != nil {
		toSerialize["api_version"] = o.ApiVersion
	}
	if o.Kind != nil {
		toSerialize["kind"] = o.Kind
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.Cloud != nil {
		toSerialize["cloud"] = o.Cloud
	}
	if o.NetworkConnectionTypes != nil {
		toSerialize["network_connection_types"] = o.NetworkConnectionTypes
	}
	if o.DisplayName != nil {
		toSerialize["display_name"] = o.DisplayName
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.Schemas != nil {
		toSerialize["schemas"] = o.Schemas
	}
	if o.OrganizationName != nil {
		toSerialize["organization_name"] = o.OrganizationName
	}
	if o.OrganizationDescription != nil {
		toSerialize["organization_description"] = o.OrganizationDescription
	}
	if o.OrganizationContact != nil {
		toSerialize["organization_contact"] = o.OrganizationContact
	}
	if o.LogoUrl != nil {
		toSerialize["logo_url"] = o.LogoUrl
	}
	return json.Marshal(toSerialize)
}

type NullableCdxV1ConsumerSharedResource struct {
	value *CdxV1ConsumerSharedResource
	isSet bool
}

func (v NullableCdxV1ConsumerSharedResource) Get() *CdxV1ConsumerSharedResource {
	return v.value
}

func (v *NullableCdxV1ConsumerSharedResource) Set(val *CdxV1ConsumerSharedResource) {
	v.value = val
	v.isSet = true
}

func (v NullableCdxV1ConsumerSharedResource) IsSet() bool {
	return v.isSet
}

func (v *NullableCdxV1ConsumerSharedResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCdxV1ConsumerSharedResource(val *CdxV1ConsumerSharedResource) *NullableCdxV1ConsumerSharedResource {
	return &NullableCdxV1ConsumerSharedResource{value: val, isSet: true}
}

func (v NullableCdxV1ConsumerSharedResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCdxV1ConsumerSharedResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
