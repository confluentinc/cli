// Copyright 2021 Confluent Inc. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*
REST Admin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0.0
Contact: kafka-clients-proxy-team@confluent.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"bytes"
	"encoding/json"
)

import (
	"reflect"
)

// CreateAclRequestData struct for CreateAclRequestData
type CreateAclRequestData struct {
	ResourceType AclResourceType `json:"resource_type,omitempty"`
	ResourceName string          `json:"resource_name,omitempty"`
	PatternType  string          `json:"pattern_type,omitempty"`
	Principal    string          `json:"principal,omitempty"`
	Host         string          `json:"host,omitempty"`
	Operation    string          `json:"operation,omitempty"`
	Permission   string          `json:"permission,omitempty"`
}

// NewCreateAclRequestData instantiates a new CreateAclRequestData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAclRequestData(resourceType AclResourceType, resourceName string, patternType string, principal string, host string, operation string, permission string) *CreateAclRequestData {
	this := CreateAclRequestData{}
	this.ResourceType = resourceType
	this.ResourceName = resourceName
	this.PatternType = patternType
	this.Principal = principal
	this.Host = host
	this.Operation = operation
	this.Permission = permission
	return &this
}

// NewCreateAclRequestDataWithDefaults instantiates a new CreateAclRequestData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAclRequestDataWithDefaults() *CreateAclRequestData {
	this := CreateAclRequestData{}
	return &this
}

// GetResourceType returns the ResourceType field value
func (o *CreateAclRequestData) GetResourceType() AclResourceType {
	if o == nil {
		var ret AclResourceType
		return ret
	}

	return o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value
// and a boolean to check if the value has been set.
func (o *CreateAclRequestData) GetResourceTypeOk() (*AclResourceType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceType, true
}

// SetResourceType sets field value
func (o *CreateAclRequestData) SetResourceType(v AclResourceType) {
	o.ResourceType = v
}

// GetResourceName returns the ResourceName field value
func (o *CreateAclRequestData) GetResourceName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceName
}

// GetResourceNameOk returns a tuple with the ResourceName field value
// and a boolean to check if the value has been set.
func (o *CreateAclRequestData) GetResourceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceName, true
}

// SetResourceName sets field value
func (o *CreateAclRequestData) SetResourceName(v string) {
	o.ResourceName = v
}

// GetPatternType returns the PatternType field value
func (o *CreateAclRequestData) GetPatternType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PatternType
}

// GetPatternTypeOk returns a tuple with the PatternType field value
// and a boolean to check if the value has been set.
func (o *CreateAclRequestData) GetPatternTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PatternType, true
}

// SetPatternType sets field value
func (o *CreateAclRequestData) SetPatternType(v string) {
	o.PatternType = v
}

// GetPrincipal returns the Principal field value
func (o *CreateAclRequestData) GetPrincipal() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Principal
}

// GetPrincipalOk returns a tuple with the Principal field value
// and a boolean to check if the value has been set.
func (o *CreateAclRequestData) GetPrincipalOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Principal, true
}

// SetPrincipal sets field value
func (o *CreateAclRequestData) SetPrincipal(v string) {
	o.Principal = v
}

// GetHost returns the Host field value
func (o *CreateAclRequestData) GetHost() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Host
}

// GetHostOk returns a tuple with the Host field value
// and a boolean to check if the value has been set.
func (o *CreateAclRequestData) GetHostOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Host, true
}

// SetHost sets field value
func (o *CreateAclRequestData) SetHost(v string) {
	o.Host = v
}

// GetOperation returns the Operation field value
func (o *CreateAclRequestData) GetOperation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Operation
}

// GetOperationOk returns a tuple with the Operation field value
// and a boolean to check if the value has been set.
func (o *CreateAclRequestData) GetOperationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Operation, true
}

// SetOperation sets field value
func (o *CreateAclRequestData) SetOperation(v string) {
	o.Operation = v
}

// GetPermission returns the Permission field value
func (o *CreateAclRequestData) GetPermission() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Permission
}

// GetPermissionOk returns a tuple with the Permission field value
// and a boolean to check if the value has been set.
func (o *CreateAclRequestData) GetPermissionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Permission, true
}

// SetPermission sets field value
func (o *CreateAclRequestData) SetPermission(v string) {
	o.Permission = v
}

// Redact resets all sensitive fields to their zero value.
func (o *CreateAclRequestData) Redact() {
	o.recurseRedact(&o.ResourceType)
	o.recurseRedact(&o.ResourceName)
	o.recurseRedact(&o.PatternType)
	o.recurseRedact(&o.Principal)
	o.recurseRedact(&o.Host)
	o.recurseRedact(&o.Operation)
	o.recurseRedact(&o.Permission)
}

func (o *CreateAclRequestData) recurseRedact(v interface{}) {
	type redactor interface {
		Redact()
	}
	if r, ok := v.(redactor); ok {
		r.Redact()
	} else {
		val := reflect.ValueOf(v)
		if val.Kind() == reflect.Ptr {
			val = val.Elem()
		}
		switch val.Kind() {
		case reflect.Slice, reflect.Array:
			for i := 0; i < val.Len(); i++ {
				// support data types declared without pointers
				o.recurseRedact(val.Index(i).Interface())
				// ... and data types that were declared without but need pointers (for Redact)
				if val.Index(i).CanAddr() {
					o.recurseRedact(val.Index(i).Addr().Interface())
				}
			}
		}
	}
}

func (o CreateAclRequestData) zeroField(v interface{}) {
	p := reflect.ValueOf(v).Elem()
	p.Set(reflect.Zero(p.Type()))
}

func (o CreateAclRequestData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["resource_type"] = o.ResourceType
	}
	if true {
		toSerialize["resource_name"] = o.ResourceName
	}
	if true {
		toSerialize["pattern_type"] = o.PatternType
	}
	if true {
		toSerialize["principal"] = o.Principal
	}
	if true {
		toSerialize["host"] = o.Host
	}
	if true {
		toSerialize["operation"] = o.Operation
	}
	if true {
		toSerialize["permission"] = o.Permission
	}
	buffer := &bytes.Buffer{}
	encoder := json.NewEncoder(buffer)
	encoder.SetEscapeHTML(false)
	err := encoder.Encode(toSerialize)
	return buffer.Bytes(), err
}

type NullableCreateAclRequestData struct {
	value *CreateAclRequestData
	isSet bool
}

func (v NullableCreateAclRequestData) Get() *CreateAclRequestData {
	return v.value
}

func (v *NullableCreateAclRequestData) Set(val *CreateAclRequestData) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAclRequestData) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAclRequestData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAclRequestData(val *CreateAclRequestData) *NullableCreateAclRequestData {
	return &NullableCreateAclRequestData{value: val, isSet: true}
}

func (v NullableCreateAclRequestData) MarshalJSON() ([]byte, error) {
	buffer := &bytes.Buffer{}
	encoder := json.NewEncoder(buffer)
	encoder.SetEscapeHTML(false)
	err := encoder.Encode(v.value)
	return buffer.Bytes(), err
}

func (v *NullableCreateAclRequestData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
