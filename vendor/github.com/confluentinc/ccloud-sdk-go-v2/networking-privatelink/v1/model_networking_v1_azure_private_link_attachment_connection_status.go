// Copyright 2021 Confluent Inc. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*
Network API

Network API

API version: 0.0.1-alpha1
Contact: cire-traffic@confluent.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"bytes"
	"encoding/json"
)

import (
	"reflect"
)

// NetworkingV1AzurePrivateLinkAttachmentConnectionStatus Status of an Azure PrivateLink attachment connection for an availability zone.
type NetworkingV1AzurePrivateLinkAttachmentConnectionStatus struct {
	// PrivateLinkAttachmentConnectionStatus kind.
	Kind string `json:"kind,omitempty"`
	// Availability zone associated with the Azure PrivateLink service.
	Zone string `json:"zone,omitempty"`
	// Azure PrivateLink service alias for the availability zone.
	PrivateLinkServiceAlias string `json:"private_link_service_alias,omitempty"`
	// Azure PrivateLink service resource id for the availability zone.
	PrivateLinkServiceResourceId string `json:"private_link_service_resource_id,omitempty"`
	// Resource Id of the PrivateEndpoint (if any) that is connected to the PrivateLink service for this availability zone.
	PrivateEndpointResourceId string `json:"private_endpoint_resource_id,omitempty"`
}

// NewNetworkingV1AzurePrivateLinkAttachmentConnectionStatus instantiates a new NetworkingV1AzurePrivateLinkAttachmentConnectionStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkingV1AzurePrivateLinkAttachmentConnectionStatus(kind string, zone string, privateLinkServiceAlias string, privateLinkServiceResourceId string, privateEndpointResourceId string) *NetworkingV1AzurePrivateLinkAttachmentConnectionStatus {
	this := NetworkingV1AzurePrivateLinkAttachmentConnectionStatus{}
	this.Kind = kind
	this.Zone = zone
	this.PrivateLinkServiceAlias = privateLinkServiceAlias
	this.PrivateLinkServiceResourceId = privateLinkServiceResourceId
	this.PrivateEndpointResourceId = privateEndpointResourceId
	return &this
}

// NewNetworkingV1AzurePrivateLinkAttachmentConnectionStatusWithDefaults instantiates a new NetworkingV1AzurePrivateLinkAttachmentConnectionStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkingV1AzurePrivateLinkAttachmentConnectionStatusWithDefaults() *NetworkingV1AzurePrivateLinkAttachmentConnectionStatus {
	this := NetworkingV1AzurePrivateLinkAttachmentConnectionStatus{}
	return &this
}

// GetKind returns the Kind field value
func (o *NetworkingV1AzurePrivateLinkAttachmentConnectionStatus) GetKind() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Kind
}

// GetKindOk returns a tuple with the Kind field value
// and a boolean to check if the value has been set.
func (o *NetworkingV1AzurePrivateLinkAttachmentConnectionStatus) GetKindOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Kind, true
}

// SetKind sets field value
func (o *NetworkingV1AzurePrivateLinkAttachmentConnectionStatus) SetKind(v string) {
	o.Kind = v
}

// GetZone returns the Zone field value
func (o *NetworkingV1AzurePrivateLinkAttachmentConnectionStatus) GetZone() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Zone
}

// GetZoneOk returns a tuple with the Zone field value
// and a boolean to check if the value has been set.
func (o *NetworkingV1AzurePrivateLinkAttachmentConnectionStatus) GetZoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Zone, true
}

// SetZone sets field value
func (o *NetworkingV1AzurePrivateLinkAttachmentConnectionStatus) SetZone(v string) {
	o.Zone = v
}

// GetPrivateLinkServiceAlias returns the PrivateLinkServiceAlias field value
func (o *NetworkingV1AzurePrivateLinkAttachmentConnectionStatus) GetPrivateLinkServiceAlias() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PrivateLinkServiceAlias
}

// GetPrivateLinkServiceAliasOk returns a tuple with the PrivateLinkServiceAlias field value
// and a boolean to check if the value has been set.
func (o *NetworkingV1AzurePrivateLinkAttachmentConnectionStatus) GetPrivateLinkServiceAliasOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrivateLinkServiceAlias, true
}

// SetPrivateLinkServiceAlias sets field value
func (o *NetworkingV1AzurePrivateLinkAttachmentConnectionStatus) SetPrivateLinkServiceAlias(v string) {
	o.PrivateLinkServiceAlias = v
}

// GetPrivateLinkServiceResourceId returns the PrivateLinkServiceResourceId field value
func (o *NetworkingV1AzurePrivateLinkAttachmentConnectionStatus) GetPrivateLinkServiceResourceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PrivateLinkServiceResourceId
}

// GetPrivateLinkServiceResourceIdOk returns a tuple with the PrivateLinkServiceResourceId field value
// and a boolean to check if the value has been set.
func (o *NetworkingV1AzurePrivateLinkAttachmentConnectionStatus) GetPrivateLinkServiceResourceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrivateLinkServiceResourceId, true
}

// SetPrivateLinkServiceResourceId sets field value
func (o *NetworkingV1AzurePrivateLinkAttachmentConnectionStatus) SetPrivateLinkServiceResourceId(v string) {
	o.PrivateLinkServiceResourceId = v
}

// GetPrivateEndpointResourceId returns the PrivateEndpointResourceId field value
func (o *NetworkingV1AzurePrivateLinkAttachmentConnectionStatus) GetPrivateEndpointResourceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PrivateEndpointResourceId
}

// GetPrivateEndpointResourceIdOk returns a tuple with the PrivateEndpointResourceId field value
// and a boolean to check if the value has been set.
func (o *NetworkingV1AzurePrivateLinkAttachmentConnectionStatus) GetPrivateEndpointResourceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrivateEndpointResourceId, true
}

// SetPrivateEndpointResourceId sets field value
func (o *NetworkingV1AzurePrivateLinkAttachmentConnectionStatus) SetPrivateEndpointResourceId(v string) {
	o.PrivateEndpointResourceId = v
}

// Redact resets all sensitive fields to their zero value.
func (o *NetworkingV1AzurePrivateLinkAttachmentConnectionStatus) Redact() {
	o.recurseRedact(&o.Kind)
	o.recurseRedact(&o.Zone)
	o.recurseRedact(&o.PrivateLinkServiceAlias)
	o.recurseRedact(&o.PrivateLinkServiceResourceId)
	o.recurseRedact(&o.PrivateEndpointResourceId)
}

func (o *NetworkingV1AzurePrivateLinkAttachmentConnectionStatus) recurseRedact(v interface{}) {
	type redactor interface {
		Redact()
	}
	if r, ok := v.(redactor); ok {
		r.Redact()
	} else {
		val := reflect.ValueOf(v)
		if val.Kind() == reflect.Ptr {
			val = val.Elem()
		}
		switch val.Kind() {
		case reflect.Slice, reflect.Array:
			for i := 0; i < val.Len(); i++ {
				// support data types declared without pointers
				o.recurseRedact(val.Index(i).Interface())
				// ... and data types that were declared without but need pointers (for Redact)
				if val.Index(i).CanAddr() {
					o.recurseRedact(val.Index(i).Addr().Interface())
				}
			}
		}
	}
}

func (o NetworkingV1AzurePrivateLinkAttachmentConnectionStatus) zeroField(v interface{}) {
	p := reflect.ValueOf(v).Elem()
	p.Set(reflect.Zero(p.Type()))
}

func (o NetworkingV1AzurePrivateLinkAttachmentConnectionStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["kind"] = o.Kind
	}
	if true {
		toSerialize["zone"] = o.Zone
	}
	if true {
		toSerialize["private_link_service_alias"] = o.PrivateLinkServiceAlias
	}
	if true {
		toSerialize["private_link_service_resource_id"] = o.PrivateLinkServiceResourceId
	}
	if true {
		toSerialize["private_endpoint_resource_id"] = o.PrivateEndpointResourceId
	}
	buffer := &bytes.Buffer{}
	encoder := json.NewEncoder(buffer)
	encoder.SetEscapeHTML(false)
	err := encoder.Encode(toSerialize)
	return buffer.Bytes(), err
}

type NullableNetworkingV1AzurePrivateLinkAttachmentConnectionStatus struct {
	value *NetworkingV1AzurePrivateLinkAttachmentConnectionStatus
	isSet bool
}

func (v NullableNetworkingV1AzurePrivateLinkAttachmentConnectionStatus) Get() *NetworkingV1AzurePrivateLinkAttachmentConnectionStatus {
	return v.value
}

func (v *NullableNetworkingV1AzurePrivateLinkAttachmentConnectionStatus) Set(val *NetworkingV1AzurePrivateLinkAttachmentConnectionStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkingV1AzurePrivateLinkAttachmentConnectionStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkingV1AzurePrivateLinkAttachmentConnectionStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkingV1AzurePrivateLinkAttachmentConnectionStatus(val *NetworkingV1AzurePrivateLinkAttachmentConnectionStatus) *NullableNetworkingV1AzurePrivateLinkAttachmentConnectionStatus {
	return &NullableNetworkingV1AzurePrivateLinkAttachmentConnectionStatus{value: val, isSet: true}
}

func (v NullableNetworkingV1AzurePrivateLinkAttachmentConnectionStatus) MarshalJSON() ([]byte, error) {
	buffer := &bytes.Buffer{}
	encoder := json.NewEncoder(buffer)
	encoder.SetEscapeHTML(false)
	err := encoder.Encode(v.value)
	return buffer.Bytes(), err
}

func (v *NullableNetworkingV1AzurePrivateLinkAttachmentConnectionStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
