#!/usr/bin/env bash

set -e

PROTOC=${1:-/usr/bin/env protoc}
export PROTOC

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
PROTOC_GEN_VALIDATE_LOCALES_DIR=${DIR}/../error_messages
export PROTOC_GEN_VALIDATE_LOCALES_DIR

function run_protoc() {
  set -e
  echo "Running protoc for $1"
  ${PROTOC} \
    -I=vendor/github.com/gogo/protobuf/gogoproto \
    -I=vendor/github.com/gogo/protobuf \
    -I=vendor/github.com/gogo/googleapis \
    -I=vendor/github.com/confluentinc/proto-go-setter \
    -I=vendor/github.com/travisjeffery/proto-go-sql \
    -I=vendor/github.com/envoyproxy/protoc-gen-validate \
    -I=. \
    -I=vendor \
    --sql_out=\
Msetter.proto=github.com/confluentinc/proto-go-setter,\
Msql.proto=github.com/travisjeffery/proto-go-sql,\
Mvalidate.proto=github.com/envoyproxy/protoc-gen-validate,\
Mgoogle/protobuf/any.proto=github.com/gogo/protobuf/types,\
Mgoogle/protobuf/duration.proto=github.com/gogo/protobuf/types,\
Mgoogle/protobuf/struct.proto=github.com/gogo/protobuf/types,\
Mgoogle/protobuf/timestamp.proto=github.com/gogo/protobuf/types,\
Mgoogle/protobuf/wrappers.proto=github.com/gogo/protobuf/types,\
Mgoogle/rpc/status.proto=github.com/gogo/googleapis/google/rpc,\
paths=source_relative,\
plugins=grpc+embedded:. \
    --setter_out=\
Msetter.proto=github.com/confluentinc/proto-go-setter,\
Msql.proto=github.com/travisjeffery/proto-go-sql,\
Mvalidate.proto=github.com/envoyproxy/protoc-gen-validate,\
Mgoogle/protobuf/any.proto=github.com/gogo/protobuf/types,\
Mgoogle/protobuf/duration.proto=github.com/gogo/protobuf/types,\
Mgoogle/protobuf/struct.proto=github.com/gogo/protobuf/types,\
Mgoogle/protobuf/timestamp.proto=github.com/gogo/protobuf/types,\
Mgoogle/protobuf/wrappers.proto=github.com/gogo/protobuf/types,\
Mgoogle/rpc/status.proto=github.com/gogo/googleapis/google/rpc,\
paths=source_relative,\
plugins=grpc+embedded:. \
    --structs_out=\
Msetter.proto=github.com/confluentinc/proto-go-setter,\
Msql.proto=github.com/travisjeffery/proto-go-sql,\
Mvalidate.proto=github.com/envoyproxy/protoc-gen-validate,\
Mgoogle/protobuf/any.proto=github.com/gogo/protobuf/types,\
Mgoogle/protobuf/duration.proto=github.com/gogo/protobuf/types,\
Mgoogle/protobuf/struct.proto=github.com/gogo/protobuf/types,\
Mgoogle/protobuf/timestamp.proto=github.com/gogo/protobuf/types,\
Mgoogle/protobuf/wrappers.proto=github.com/gogo/protobuf/types,\
Mgoogle/rpc/status.proto=github.com/gogo/googleapis/google/rpc,\
paths=source_relative,\
plugins=grpc+embedded:. \
    $1
}
export -f run_protoc

function run_protoc_validate() {
  set -e
  echo "Running protoc-gen-validate for $1"
  ${PROTOC} \
     -I=./vendor/github.com/gogo/protobuf/gogoproto \
     -I=./vendor/github.com/gogo/protobuf \
     -I=./vendor/github.com/gogo/googleapis \
     -I=./vendor/github.com/confluentinc/proto-go-setter \
     -I=./vendor/github.com/travisjeffery/proto-go-sql \
     -I=./vendor/github.com/envoyproxy/protoc-gen-validate \
     -I=. \
     -I=./vendor \
    --validate_out=lang=go,\
Msetter.proto=github.com/confluentinc/proto-go-setter,\
Msql.proto=github.com/travisjeffery/proto-go-sql,\
Mvalidate.proto=github.com/envoyproxy/protoc-gen-validate,\
Mgoogle/protobuf/any.proto=github.com/gogo/protobuf/types,\
Mgoogle/protobuf/duration.proto=github.com/gogo/protobuf/types,\
Mgoogle/protobuf/struct.proto=github.com/gogo/protobuf/types,\
Mgoogle/protobuf/timestamp.proto=github.com/gogo/protobuf/types,\
Mgoogle/protobuf/wrappers.proto=github.com/gogo/protobuf/types,\
Mgoogle/rpc/status.proto=github.com/gogo/googleapis/google/rpc,\
paths=source_relative,\
plugins=grpc+embedded:. \
    $1
}
export -f run_protoc_validate

# Generate all common/* protobufs WITH NO DEPS.
${PROTOC} \
    -I=. \
    -I=./vendor \
    --go_out=paths=source_relative:. \
  $(find ./common -type f -name "*.proto")

# run_protoc for all these files
# NOTE: Nothing in ./common/* is being generated with this command
#       as we don't want all the gogo replace directives. We did this 
#       in the previous step.
find . \
  -type d \( \
    -path "./target" -o \
    -path "./vendor" -o \
    -path "*/vendor/*" -o \
    -path "./*/util" -o \
    -path "*/mock/*" -o \
    -path "./common/*" \
  \) -prune -o \
  -type f \( \
    -name "*.proto" \
  \) \
  -print0 | \
  xargs -0 -n1 bash -c 'run_protoc "$0"'

# run_protoc_validate for these files (just kafka/ for now)
find ./kafka \
  -type d \( \
    -path "./*/util" -o \
    -path "*/mock/*" \
  \) -prune -o \
  -type f \( \
    -name "*.proto" \
  \) \
  -print0 | \
  xargs -0 -n1 bash -c 'run_protoc_validate "$0"'

# This adds the kubernetes code generator annotations to the generated go code (*.pb.go generated from protobufs)
awk  '/^type PhysicalStatefulCluster struct/{print "// +genclient\n// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object\n"}1' operator/v1/physicalstatefulcluster.pb.go > operator/v1/physicalstatefulcluster.pb.go.1 \
  && mv operator/v1/physicalstatefulcluster.pb.go.1 operator/v1/physicalstatefulcluster.pb.go

awk  '/^type PhysicalStatefulClusterList struct/{print "// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object\n"}1' operator/v1/physicalstatefulcluster.pb.go > operator/v1/physicalstatefulcluster.pb.go.1 \
  && mv operator/v1/physicalstatefulcluster.pb.go.1 operator/v1/physicalstatefulcluster.pb.go

# This add the kubernetes code generator annotations to the generated go code (*.pb.go generated from protobufs)
awk  '/^type LogicalKafkaCluster struct/{print "// +genclient\n// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object\n"}1' operator/v1/logicalkafkacluster.pb.go > operator/v1/logicalkafkacluster.pb.go.1 \
  && mv operator/v1/logicalkafkacluster.pb.go.1 operator/v1/logicalkafkacluster.pb.go

awk  '/^type LogicalKafkaClusterList struct/{print "// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object\n"}1' operator/v1/logicalkafkacluster.pb.go > operator/v1/logicalkafkacluster.pb.go.1 \
  && mv operator/v1/logicalkafkacluster.pb.go.1 operator/v1/logicalkafkacluster.pb.go

awk  '/^type SchemaRegistryCluster struct/{print "// +genclient\n// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object\n"}1' operator/v1/schemaregistry.pb.go > operator/v1/schemaregistry.pb.go.1 \
  && mv operator/v1/schemaregistry.pb.go.1 operator/v1/schemaregistry.pb.go

awk  '/^type SchemaRegistryClusterList struct/{print "// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object\n"}1' operator/v1/schemaregistry.pb.go > operator/v1/schemaregistry.pb.go.1 \
  && mv operator/v1/schemaregistry.pb.go.1 operator/v1/schemaregistry.pb.go

awk  '/^type Connector struct/{print "// +genclient\n// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object\n"}1' operator/v1/connect.pb.go > operator/v1/connect.pb.go.1 \
  && mv operator/v1/connect.pb.go.1 operator/v1/connect.pb.go

awk  '/^type ConnectorList struct/{print "// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object\n"}1' operator/v1/connect.pb.go > operator/v1/connect.pb.go.1 \
  && mv operator/v1/connect.pb.go.1 operator/v1/connect.pb.go
