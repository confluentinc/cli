// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: streamgovernance/streamgovernance.proto

package ccloud

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	_ "github.com/travisjeffery/proto-go-sql"
	io "io"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type StreamGovernanceRegion struct {
	Created              *types.Timestamp               `protobuf:"bytes,1,opt,name=created,proto3" json:"created,omitempty" db:"created,omitempty" url:"created,omitempty"`
	Modified             *types.Timestamp               `protobuf:"bytes,2,opt,name=modified,proto3" json:"modified,omitempty" db:"modified,omitempty" url:"modified,omitempty"`
	Deactivated          *types.Timestamp               `protobuf:"bytes,3,opt,name=deactivated,proto3" json:"deactivated,omitempty" db:"deactivated,omitempty" url:"deactivated,omitempty"`
	Id                   string                         `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty" db:"id,omitempty" url:"id,omitempty"`
	DisplayName          string                         `protobuf:"bytes,5,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty" db:"display_name,omitempty" url:"display_name,omitempty"`
	Cloud                string                         `protobuf:"bytes,6,opt,name=cloud,proto3" json:"cloud,omitempty" db:"cloud,omitempty" url:"cloud,omitempty"`
	RegionId             string                         `protobuf:"bytes,7,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty" db:"region_id,omitempty" url:"region_id,omitempty"`
	EnvironmentId        string                         `protobuf:"bytes,8,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty" db:"environment_id,omitempty" url:"environment_id,omitempty"`
	Config               *StreamGovernanceRegion_Config `protobuf:"bytes,9,opt,name=config,proto3" json:"config,omitempty" db:"config,omitempty" url:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *StreamGovernanceRegion) Reset()         { *m = StreamGovernanceRegion{} }
func (m *StreamGovernanceRegion) String() string { return proto.CompactTextString(m) }
func (*StreamGovernanceRegion) ProtoMessage()    {}
func (*StreamGovernanceRegion) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2716337dec79b26, []int{0}
}
func (m *StreamGovernanceRegion) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StreamGovernanceRegion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StreamGovernanceRegion.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StreamGovernanceRegion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamGovernanceRegion.Merge(m, src)
}
func (m *StreamGovernanceRegion) XXX_Size() int {
	return m.Size()
}
func (m *StreamGovernanceRegion) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamGovernanceRegion.DiscardUnknown(m)
}

var xxx_messageInfo_StreamGovernanceRegion proto.InternalMessageInfo

func (m *StreamGovernanceRegion) GetCreated() *types.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *StreamGovernanceRegion) GetModified() *types.Timestamp {
	if m != nil {
		return m.Modified
	}
	return nil
}

func (m *StreamGovernanceRegion) GetDeactivated() *types.Timestamp {
	if m != nil {
		return m.Deactivated
	}
	return nil
}

func (m *StreamGovernanceRegion) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *StreamGovernanceRegion) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *StreamGovernanceRegion) GetCloud() string {
	if m != nil {
		return m.Cloud
	}
	return ""
}

func (m *StreamGovernanceRegion) GetRegionId() string {
	if m != nil {
		return m.RegionId
	}
	return ""
}

func (m *StreamGovernanceRegion) GetEnvironmentId() string {
	if m != nil {
		return m.EnvironmentId
	}
	return ""
}

func (m *StreamGovernanceRegion) GetConfig() *StreamGovernanceRegion_Config {
	if m != nil {
		return m.Config
	}
	return nil
}

type StreamGovernanceRegion_Config struct {
	ClusterId            string   `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty" db:"cluster_id,omitempty" url:"cluster_id,omitempty"`
	Package              []string `protobuf:"bytes,2,rep,name=package,proto3" json:"package,omitempty" db:"package,omitempty" url:"package,omitempty"`
	GeolocationName      string   `protobuf:"bytes,4,opt,name=geolocation_name,json=geolocationName,proto3" json:"geolocation_name,omitempty" db:"geolocation_name,omitempty" url:"geolocation_name,omitempty"` // Deprecated: Do not use.
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamGovernanceRegion_Config) Reset()         { *m = StreamGovernanceRegion_Config{} }
func (m *StreamGovernanceRegion_Config) String() string { return proto.CompactTextString(m) }
func (*StreamGovernanceRegion_Config) ProtoMessage()    {}
func (*StreamGovernanceRegion_Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2716337dec79b26, []int{0, 0}
}
func (m *StreamGovernanceRegion_Config) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StreamGovernanceRegion_Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StreamGovernanceRegion_Config.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StreamGovernanceRegion_Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamGovernanceRegion_Config.Merge(m, src)
}
func (m *StreamGovernanceRegion_Config) XXX_Size() int {
	return m.Size()
}
func (m *StreamGovernanceRegion_Config) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamGovernanceRegion_Config.DiscardUnknown(m)
}

var xxx_messageInfo_StreamGovernanceRegion_Config proto.InternalMessageInfo

func (m *StreamGovernanceRegion_Config) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

func (m *StreamGovernanceRegion_Config) GetPackage() []string {
	if m != nil {
		return m.Package
	}
	return nil
}

// Deprecated: Do not use.
func (m *StreamGovernanceRegion_Config) GetGeolocationName() string {
	if m != nil {
		return m.GeolocationName
	}
	return ""
}

func init() {
	proto.RegisterType((*StreamGovernanceRegion)(nil), "ccloud.streamgovernance.StreamGovernanceRegion")
	proto.RegisterType((*StreamGovernanceRegion_Config)(nil), "ccloud.streamgovernance.StreamGovernanceRegion.Config")
}

func init() {
	proto.RegisterFile("streamgovernance/streamgovernance.proto", fileDescriptor_b2716337dec79b26)
}

var fileDescriptor_b2716337dec79b26 = []byte{
	// 634 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x93, 0x41, 0x6f, 0xd3, 0x3e,
	0x18, 0xc6, 0x95, 0xae, 0xeb, 0x1a, 0xef, 0xff, 0x87, 0xc9, 0x07, 0x88, 0x7a, 0x58, 0xaa, 0x09,
	0x89, 0x0a, 0x56, 0x77, 0x94, 0x51, 0x4d, 0x63, 0x87, 0xa9, 0x20, 0xd0, 0x10, 0x42, 0xc8, 0x43,
	0x42, 0xe2, 0x32, 0xb9, 0xb1, 0x9b, 0x99, 0x26, 0x71, 0x97, 0x38, 0x15, 0x3b, 0x20, 0x71, 0xe6,
	0xe3, 0xf0, 0x0d, 0xb8, 0x71, 0xe4, 0x13, 0x44, 0xa8, 0x1f, 0x21, 0x37, 0x6e, 0xc8, 0x4e, 0x5b,
	0xba, 0x3a, 0x63, 0xb7, 0xf6, 0x79, 0xf2, 0xfe, 0x1e, 0xdb, 0xef, 0xfb, 0x82, 0xfb, 0x89, 0x8c,
	0x19, 0x09, 0x7d, 0x31, 0x61, 0x71, 0x44, 0x22, 0x8f, 0x75, 0x56, 0x05, 0x34, 0x8e, 0x85, 0x14,
	0xf0, 0xae, 0xe7, 0x05, 0x22, 0xa5, 0x68, 0xd5, 0x6e, 0xb8, 0xbe, 0x10, 0x7e, 0xc0, 0x3a, 0xfa,
	0xb3, 0x41, 0x3a, 0xec, 0x48, 0x1e, 0xb2, 0x44, 0x92, 0x70, 0x5c, 0x54, 0x36, 0xec, 0xe4, 0x22,
	0x28, 0x7e, 0xee, 0x7c, 0xb7, 0xc1, 0x9d, 0x53, 0x0d, 0x78, 0xb9, 0x00, 0x60, 0xe6, 0x73, 0x11,
	0xc1, 0x73, 0xb0, 0xe1, 0xc5, 0x8c, 0x48, 0x46, 0x1d, 0xab, 0x69, 0xb5, 0x36, 0xbb, 0x0d, 0x54,
	0x80, 0xd1, 0x1c, 0x8c, 0xde, 0xcd, 0xc1, 0xfd, 0x6e, 0x9e, 0xb9, 0x88, 0x0e, 0x0e, 0x77, 0x66,
	0x25, 0xbb, 0x22, 0xe4, 0x92, 0x85, 0x63, 0x79, 0xb9, 0xd3, 0x4c, 0xe3, 0xa0, 0x4c, 0xc7, 0x73,
	0x3c, 0x0c, 0x40, 0x3d, 0x14, 0x94, 0x0f, 0x39, 0xa3, 0x4e, 0xe5, 0xc6, 0xa8, 0xfd, 0x3c, 0x73,
	0xf7, 0x54, 0xd4, 0xbc, 0xc6, 0xc8, 0x2a, 0x31, 0xf0, 0x22, 0x01, 0x7e, 0x02, 0x9b, 0x94, 0x11,
	0x4f, 0xf2, 0x89, 0xbe, 0xdb, 0xda, 0x8d, 0x81, 0x87, 0x79, 0xe6, 0xf6, 0x54, 0xe0, 0x52, 0x99,
	0x91, 0x59, 0xee, 0xe1, 0xe5, 0x28, 0x78, 0x00, 0x2a, 0x9c, 0x3a, 0xd5, 0xa6, 0xd5, 0xb2, 0xfb,
	0xad, 0x3c, 0x73, 0xef, 0x29, 0x28, 0x37, 0x59, 0x57, 0x24, 0x5c, 0xe1, 0x14, 0x9e, 0x81, 0xff,
	0x28, 0x4f, 0xc6, 0x01, 0xb9, 0x3c, 0x8b, 0x48, 0xc8, 0x9c, 0x75, 0xcd, 0x38, 0xca, 0x33, 0xf7,
	0x40, 0x1f, 0x6c, 0xc9, 0x33, 0x4f, 0x56, 0x6e, 0xe2, 0xcd, 0x99, 0xf1, 0x86, 0x84, 0x0c, 0x3e,
	0x07, 0xeb, 0x7a, 0x9a, 0x9c, 0x9a, 0x26, 0xa3, 0x3c, 0x73, 0x1f, 0xe8, 0x76, 0x2a, 0xd1, 0x6c,
	0xe6, 0x8a, 0x8a, 0x8b, 0x62, 0x78, 0x0a, 0xec, 0x58, 0x0f, 0xcf, 0x19, 0xa7, 0xce, 0x86, 0x26,
	0xf5, 0xf2, 0xcc, 0xed, 0x2a, 0xd2, 0xc2, 0x30, 0x68, 0x65, 0x0e, 0xae, 0x17, 0xea, 0x09, 0x85,
	0x3e, 0xb8, 0xc5, 0xa2, 0x09, 0x8f, 0x45, 0x14, 0xb2, 0x48, 0x2a, 0x72, 0x5d, 0x93, 0x8f, 0xf3,
	0xcc, 0x3d, 0x52, 0xe4, 0xab, 0xae, 0x81, 0xbf, 0xd6, 0xc6, 0xff, 0x2f, 0x59, 0x27, 0x14, 0x7e,
	0xb1, 0x40, 0xcd, 0x13, 0xd1, 0x90, 0xfb, 0x8e, 0xad, 0x87, 0xa2, 0x87, 0xae, 0x59, 0x31, 0x54,
	0xbe, 0x32, 0xe8, 0x99, 0xae, 0xee, 0xef, 0xe5, 0x99, 0xbb, 0xab, 0x5f, 0x4f, 0xff, 0x37, 0x9f,
	0x6f, 0x55, 0xc6, 0xb3, 0xdc, 0xc6, 0xb7, 0x0a, 0xa8, 0x15, 0x10, 0xf8, 0x1e, 0x00, 0x2f, 0x48,
	0x13, 0xc9, 0x62, 0x75, 0x65, 0x4b, 0x5f, 0xf9, 0x20, 0xcf, 0xdc, 0xfd, 0xa2, 0x2d, 0x73, 0xa7,
	0xa4, 0x37, 0x25, 0x16, 0xb6, 0x67, 0xf2, 0x09, 0x85, 0xaf, 0xc1, 0xc6, 0x98, 0x78, 0x23, 0xe2,
	0x33, 0xa7, 0xd2, 0x5c, 0x6b, 0xd9, 0x7f, 0x77, 0x77, 0x26, 0x1b, 0x48, 0x53, 0xc7, 0x73, 0x04,
	0xbc, 0x00, 0x5b, 0x3e, 0x13, 0x81, 0xf0, 0x88, 0x54, 0x4d, 0xd4, 0xd3, 0x59, 0x4c, 0xf8, 0x8b,
	0x3c, 0x73, 0x8f, 0x15, 0x76, 0xd5, 0x37, 0xf8, 0xff, 0xf8, 0xc0, 0xb1, 0xf0, 0xed, 0x25, 0x5b,
	0xcd, 0xea, 0x61, 0xfd, 0xeb, 0xef, 0x87, 0xd5, 0x8f, 0x89, 0x88, 0x5e, 0x55, 0xeb, 0x6b, 0x5b,
	0xd5, 0xfe, 0xe7, 0x1f, 0xd3, 0x6d, 0xeb, 0xe7, 0x74, 0xdb, 0xfa, 0x35, 0xdd, 0xb6, 0xc0, 0x13,
	0x2e, 0x90, 0x7a, 0xcd, 0x20, 0x65, 0x91, 0x44, 0x45, 0xff, 0x16, 0x4b, 0x3d, 0x22, 0xc3, 0x11,
	0x31, 0xdb, 0x39, 0xe9, 0xbe, 0xb5, 0x3e, 0xf4, 0x7c, 0x2e, 0xcf, 0xd3, 0x01, 0xf2, 0x44, 0xd8,
	0x59, 0x00, 0x78, 0xe4, 0x75, 0x8a, 0x21, 0x68, 0x27, 0x74, 0xd4, 0xf6, 0x45, 0x7b, 0xf2, 0xa8,
	0x3d, 0x4e, 0x07, 0x01, 0xf7, 0x9e, 0x16, 0xfa, 0xa0, 0xa6, 0xe9, 0x8f, 0xff, 0x04, 0x00, 0x00,
	0xff, 0xff, 0xdd, 0x28, 0x0b, 0xe8, 0xb9, 0x05, 0x00, 0x00,
}

func (m *StreamGovernanceRegion) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StreamGovernanceRegion) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Created != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintStreamgovernance(dAtA, i, uint64(m.Created.Size()))
		n1, err := m.Created.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n1
	}
	if m.Modified != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintStreamgovernance(dAtA, i, uint64(m.Modified.Size()))
		n2, err := m.Modified.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n2
	}
	if m.Deactivated != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintStreamgovernance(dAtA, i, uint64(m.Deactivated.Size()))
		n3, err := m.Deactivated.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n3
	}
	if len(m.Id) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintStreamgovernance(dAtA, i, uint64(len(m.Id)))
		i += copy(dAtA[i:], m.Id)
	}
	if len(m.DisplayName) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintStreamgovernance(dAtA, i, uint64(len(m.DisplayName)))
		i += copy(dAtA[i:], m.DisplayName)
	}
	if len(m.Cloud) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintStreamgovernance(dAtA, i, uint64(len(m.Cloud)))
		i += copy(dAtA[i:], m.Cloud)
	}
	if len(m.RegionId) > 0 {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintStreamgovernance(dAtA, i, uint64(len(m.RegionId)))
		i += copy(dAtA[i:], m.RegionId)
	}
	if len(m.EnvironmentId) > 0 {
		dAtA[i] = 0x42
		i++
		i = encodeVarintStreamgovernance(dAtA, i, uint64(len(m.EnvironmentId)))
		i += copy(dAtA[i:], m.EnvironmentId)
	}
	if m.Config != nil {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintStreamgovernance(dAtA, i, uint64(m.Config.Size()))
		n4, err := m.Config.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n4
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *StreamGovernanceRegion_Config) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StreamGovernanceRegion_Config) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.ClusterId) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintStreamgovernance(dAtA, i, uint64(len(m.ClusterId)))
		i += copy(dAtA[i:], m.ClusterId)
	}
	if len(m.Package) > 0 {
		for _, s := range m.Package {
			dAtA[i] = 0x12
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if len(m.GeolocationName) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintStreamgovernance(dAtA, i, uint64(len(m.GeolocationName)))
		i += copy(dAtA[i:], m.GeolocationName)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func encodeVarintStreamgovernance(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *StreamGovernanceRegion) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Created != nil {
		l = m.Created.Size()
		n += 1 + l + sovStreamgovernance(uint64(l))
	}
	if m.Modified != nil {
		l = m.Modified.Size()
		n += 1 + l + sovStreamgovernance(uint64(l))
	}
	if m.Deactivated != nil {
		l = m.Deactivated.Size()
		n += 1 + l + sovStreamgovernance(uint64(l))
	}
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovStreamgovernance(uint64(l))
	}
	l = len(m.DisplayName)
	if l > 0 {
		n += 1 + l + sovStreamgovernance(uint64(l))
	}
	l = len(m.Cloud)
	if l > 0 {
		n += 1 + l + sovStreamgovernance(uint64(l))
	}
	l = len(m.RegionId)
	if l > 0 {
		n += 1 + l + sovStreamgovernance(uint64(l))
	}
	l = len(m.EnvironmentId)
	if l > 0 {
		n += 1 + l + sovStreamgovernance(uint64(l))
	}
	if m.Config != nil {
		l = m.Config.Size()
		n += 1 + l + sovStreamgovernance(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *StreamGovernanceRegion_Config) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ClusterId)
	if l > 0 {
		n += 1 + l + sovStreamgovernance(uint64(l))
	}
	if len(m.Package) > 0 {
		for _, s := range m.Package {
			l = len(s)
			n += 1 + l + sovStreamgovernance(uint64(l))
		}
	}
	l = len(m.GeolocationName)
	if l > 0 {
		n += 1 + l + sovStreamgovernance(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovStreamgovernance(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozStreamgovernance(x uint64) (n int) {
	return sovStreamgovernance(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *StreamGovernanceRegion) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStreamgovernance
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StreamGovernanceRegion: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StreamGovernanceRegion: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Created", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStreamgovernance
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthStreamgovernance
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthStreamgovernance
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Created == nil {
				m.Created = &types.Timestamp{}
			}
			if err := m.Created.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Modified", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStreamgovernance
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthStreamgovernance
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthStreamgovernance
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Modified == nil {
				m.Modified = &types.Timestamp{}
			}
			if err := m.Modified.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Deactivated", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStreamgovernance
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthStreamgovernance
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthStreamgovernance
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Deactivated == nil {
				m.Deactivated = &types.Timestamp{}
			}
			if err := m.Deactivated.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStreamgovernance
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStreamgovernance
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthStreamgovernance
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisplayName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStreamgovernance
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStreamgovernance
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthStreamgovernance
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DisplayName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cloud", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStreamgovernance
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStreamgovernance
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthStreamgovernance
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cloud = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RegionId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStreamgovernance
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStreamgovernance
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthStreamgovernance
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RegionId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnvironmentId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStreamgovernance
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStreamgovernance
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthStreamgovernance
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EnvironmentId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Config", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStreamgovernance
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthStreamgovernance
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthStreamgovernance
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Config == nil {
				m.Config = &StreamGovernanceRegion_Config{}
			}
			if err := m.Config.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipStreamgovernance(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthStreamgovernance
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthStreamgovernance
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StreamGovernanceRegion_Config) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStreamgovernance
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Config: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Config: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClusterId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStreamgovernance
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStreamgovernance
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthStreamgovernance
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClusterId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Package", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStreamgovernance
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStreamgovernance
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthStreamgovernance
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Package = append(m.Package, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GeolocationName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStreamgovernance
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStreamgovernance
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthStreamgovernance
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GeolocationName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipStreamgovernance(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthStreamgovernance
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthStreamgovernance
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipStreamgovernance(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowStreamgovernance
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowStreamgovernance
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowStreamgovernance
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthStreamgovernance
			}
			iNdEx += length
			if iNdEx < 0 {
				return 0, ErrInvalidLengthStreamgovernance
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowStreamgovernance
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipStreamgovernance(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
				if iNdEx < 0 {
					return 0, ErrInvalidLengthStreamgovernance
				}
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthStreamgovernance = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowStreamgovernance   = fmt.Errorf("proto: integer overflow")
)
