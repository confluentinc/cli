// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/confluentinc/cli/internal/pkg/flink/types (interfaces: OutputControllerInterface)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	types "github.com/confluentinc/cli/internal/pkg/flink/types"
	gomock "github.com/golang/mock/gomock"
)

// MockOutputControllerInterface is a mock of OutputControllerInterface interface.
type MockOutputControllerInterface struct {
	ctrl     *gomock.Controller
	recorder *MockOutputControllerInterfaceMockRecorder
}

// MockOutputControllerInterfaceMockRecorder is the mock recorder for MockOutputControllerInterface.
type MockOutputControllerInterfaceMockRecorder struct {
	mock *MockOutputControllerInterface
}

// NewMockOutputControllerInterface creates a new mock instance.
func NewMockOutputControllerInterface(ctrl *gomock.Controller) *MockOutputControllerInterface {
	mock := &MockOutputControllerInterface{ctrl: ctrl}
	mock.recorder = &MockOutputControllerInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOutputControllerInterface) EXPECT() *MockOutputControllerInterfaceMockRecorder {
	return m.recorder
}

// HandleStatementResults mocks base method.
func (m *MockOutputControllerInterface) HandleStatementResults(arg0 types.ProcessedStatement, arg1 int) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HandleStatementResults", arg0, arg1)
	ret0, _ := ret[0].(bool)
	return ret0
}

// HandleStatementResults indicates an expected call of HandleStatementResults.
func (mr *MockOutputControllerInterfaceMockRecorder) HandleStatementResults(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleStatementResults", reflect.TypeOf((*MockOutputControllerInterface)(nil).HandleStatementResults), arg0, arg1)
}
