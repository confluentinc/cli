// Code generated by mocker. DO NOT EDIT.
// github.com/travisjeffery/mocker
// Source: confluent_token_handler.go

package mock

import (
	sync "sync"

	github_com_confluentinc_mds_sdk_go_mdsv1 "github.com/confluentinc/mds-sdk-go/mdsv1"
)

// MockConfluentTokenHandler is a mock of ConfluentTokenHandler interface
type MockConfluentTokenHandler struct {
	lockGetAuthToken sync.Mutex
	GetAuthTokenFunc func(mdsClient *github_com_confluentinc_mds_sdk_go_mdsv1.APIClient, email, password string) (string, error)

	calls struct {
		GetAuthToken []struct {
			MdsClient *github_com_confluentinc_mds_sdk_go_mdsv1.APIClient
			Email     string
			Password  string
		}
	}
}

// GetAuthToken mocks base method by wrapping the associated func.
func (m *MockConfluentTokenHandler) GetAuthToken(mdsClient *github_com_confluentinc_mds_sdk_go_mdsv1.APIClient, email, password string) (string, error) {
	m.lockGetAuthToken.Lock()
	defer m.lockGetAuthToken.Unlock()

	if m.GetAuthTokenFunc == nil {
		panic("mocker: MockConfluentTokenHandler.GetAuthTokenFunc is nil but MockConfluentTokenHandler.GetAuthToken was called.")
	}

	call := struct {
		MdsClient *github_com_confluentinc_mds_sdk_go_mdsv1.APIClient
		Email     string
		Password  string
	}{
		MdsClient: mdsClient,
		Email:     email,
		Password:  password,
	}

	m.calls.GetAuthToken = append(m.calls.GetAuthToken, call)

	return m.GetAuthTokenFunc(mdsClient, email, password)
}

// GetAuthTokenCalled returns true if GetAuthToken was called at least once.
func (m *MockConfluentTokenHandler) GetAuthTokenCalled() bool {
	m.lockGetAuthToken.Lock()
	defer m.lockGetAuthToken.Unlock()

	return len(m.calls.GetAuthToken) > 0
}

// GetAuthTokenCalls returns the calls made to GetAuthToken.
func (m *MockConfluentTokenHandler) GetAuthTokenCalls() []struct {
	MdsClient *github_com_confluentinc_mds_sdk_go_mdsv1.APIClient
	Email     string
	Password  string
} {
	m.lockGetAuthToken.Lock()
	defer m.lockGetAuthToken.Unlock()

	return m.calls.GetAuthToken
}

// Reset resets the calls made to the mocked methods.
func (m *MockConfluentTokenHandler) Reset() {
	m.lockGetAuthToken.Lock()
	m.calls.GetAuthToken = nil
	m.lockGetAuthToken.Unlock()
}
